!function(e){var n={};function i(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=n,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)i.d(t,s,function(n){return e[n]}.bind(null,s));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=34)}([function(e,n){e.exports=require("express")},function(e,n){e.exports=e=>(n,i,t)=>Promise.resolve(e(n,i,t)).catch(t)},function(e,n){e.exports=require("superstruct")},function(e,n,i){const t=i(51).createPool({host:process.env.RDS_HOSTNAME,user:process.env.RDS_USERNAME,password:process.env.RDS_PASSWORD,database:process.env.RDS_DB_NAME,waitForConnections:process.env.DB_WAIT_FOR_CONNECTIONS,connectionLimit:process.env.DB_CONNECTION_LIMIT,queueLimit:process.env.DB_QUEUE_LIMIT});e.exports=t},function(e,n,i){const t=i(18);e.exports=function(e,n,i){return e.session&&e.session.userInfo.userId?i():i(new t("Unauthorized",401))}},function(e,n){e.exports=require("dotenv")},function(e,n){e.exports=require("aws-sdk")},function(e,n){e.exports=require("uuid/v4")},function(e,n,i){var t=i(17);function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}e.exports=class{constructor(e){this.pool=e,this.getAllPublicRecipesForElasticSearchBulkInsert=this.getAllPublicRecipesForElasticSearchBulkInsert.bind(this),this.getPublicRecipeForElasticSearchInsert=this.getPublicRecipeForElasticSearchInsert.bind(this),this.viewAllOfficialRecipes=this.viewAllOfficialRecipes.bind(this),this.viewAllPublicRecipes=this.viewAllPublicRecipes.bind(this),this.viewRecipeById=this.viewRecipeById.bind(this),this.createRecipe=this.createRecipe.bind(this),this.updateRecipe=this.updateRecipe.bind(this),this.deleteRecipe=this.deleteRecipe.bind(this),this.viewAllMyPrivateUserRecipes=this.viewAllMyPrivateUserRecipes.bind(this),this.viewAllMyPublicUserRecipes=this.viewAllMyPublicUserRecipes.bind(this),this.viewMyPrivateUserRecipe=this.viewMyPrivateUserRecipe.bind(this),this.viewMyPublicUserRecipe=this.viewMyPublicUserRecipe.bind(this),this.getInfoToEditMyUserRecipe=this.getInfoToEditMyUserRecipe.bind(this),this.updateMyUserRecipe=this.updateMyUserRecipe.bind(this),this.deleteMyPrivateUserRecipe=this.deleteMyPrivateUserRecipe.bind(this),this.disownMyPublicUserRecipe=this.disownMyPublicUserRecipe.bind(this)}async getAllPublicRecipesForElasticSearchBulkInsert(){try{const e=1,n="\n        SELECT\n          r.recipe_id AS recipeId,\n          u.username AS authorName,\n          rt.recipe_type_name AS recipeTypeName,\n          c.cuisine_name AS cuisineName,\n          r.title AS title,\n          r.description AS description,\n          r.directions AS directions,\n          r.recipe_image AS recipeImage\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_users u ON u.user_id = r.author_id\n        INNER JOIN nobsc_recipe_types rt ON rt.recipe_type_id = r.recipe_type_id\n        INNER JOIN nobsc_cuisines c ON c.cuisine_id = r.cuisine_id\n        WHERE r.owner_id = ?\n      ",i="\n        SELECT m.method_name AS methodName\n        FROM nobsc_methods m\n        INNER JOIN nobsc_recipe_methods rm ON rm.method_id = m.method_id\n        WHERE rm.recipe_id = ?\n      ",t="\n        SELECT e.equipment_name AS equipmentName\n        FROM nobsc_equipment e\n        INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n        WHERE re.recipe_id = ?\n      ",s="\n        SELECT i.ingredient_name AS ingredientName\n        FROM nobsc_ingredients i\n        INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n        WHERE ri.recipe_id = ?\n      ",o="\n        SELECT r.title AS subrecipeTitle\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n        WHERE rs.recipe_id = ?\n      ",[a]=await this.pool.execute(n,[e]);let c=[];for(let e of a){const{recipeId:n}=e;let a=[],d=[],u=[],p=[];const[m]=await this.pool.execute(i,[n]),[l]=await this.pool.execute(t,[n]),[I]=await this.pool.execute(s,[n]),[_]=await this.pool.execute(o,[n]);m.forEach(e=>a.push(e.methodName)),l.forEach(e=>d.push(e.equipmentName)),I.forEach(e=>u.push(e.ingredientName)),_.forEach(e=>p.push(e.subrecipeTitle)),c.push({index:{_index:"recipes",_id:n}},r({},e,{},{methodNames:a,equipmentNames:d,ingredientNames:u,subrecipeNames:p}))}return c}catch(e){console.log(e)}}async getPublicRecipeForElasticSearchInsert(e){try{const n=1,i="\n        SELECT\n          r.recipe_id AS recipeId,\n          u.username AS authorName,\n          rt.recipe_type_name AS recipeTypeName,\n          c.cuisine_name AS cuisineName,\n          r.title AS title,\n          r.description AS description,\n          r.directions AS directions,\n          r.recipe_image AS recipeImage\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_users u ON u.user_id = r.author_id\n        INNER JOIN nobsc_recipe_types rt ON rt.recipe_type_id = r.recipe_type_id\n        INNER JOIN nobsc_cuisines c ON c.cuisine_id = r.cuisine_id\n        WHERE r.recipe_id = ? AND r.owner_id = ?\n      ",t="\n        SELECT m.method_name AS methodName\n        FROM nobsc_methods m\n        INNER JOIN nobsc_recipe_methods rm ON rm.method_id = m.method_id\n        WHERE rm.recipe_id = ?\n      ",s="\n        SELECT e.equipment_name AS equipmentName\n        FROM nobsc_equipment e\n        INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n        WHERE re.recipe_id = ?\n      ",o="\n        SELECT i.ingredient_name AS ingredientName\n        FROM nobsc_ingredients i\n        INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n        WHERE ri.recipe_id = ?\n      ",a="\n        SELECT r.title AS subrecipeTitle\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n        WHERE rs.recipe_id = ?\n      ",[c]=await this.pool.execute(i,[e,n]),[d]=await this.pool.execute(t,[e]),[u]=await this.pool.execute(s,[e]),[p]=await this.pool.execute(o,[e]),[m]=await this.pool.execute(a,[e]);let l=[],I=[],_=[],g=[];d.forEach(e=>l.push(e.methodName)),u.forEach(e=>I.push(e.equipmentName)),p.forEach(e=>_.push(e.ingredientName)),m.forEach(e=>g.push(e.subrecipeTitle));const[y]=c;return r({},r({},y),{},{methodNames:l,equipmentNames:I,ingredientNames:_,subrecipeNames:g})}catch(e){console.log(e)}}async viewAllOfficialRecipes(){const[e]=await this.pool.execute("\n      SELECT recipe_id, recipe_type_id, cuisine_id, title, recipe_image, owner_id\n      FROM nobsc_recipes\n      WHERE author_id = 1 AND owner_id = 1\n      ORDER BY title ASC\n    ");return e}async viewAllPublicRecipes(){const[e]=await this.pool.execute("\n      SELECT recipe_id, recipe_type_id, cuisine_id, title, recipe_image\n      FROM nobsc_recipes\n      WHERE author_id != 1 AND owner_id = 1\n    ");return e}async viewRecipeById(e){try{const n=1,i="\n        SELECT\n          r.recipe_id AS recipeId,\n          u.username AS authorName,\n          u.avatar AS authorAvatar,\n          rt.recipe_type_name AS recipeTypeName,\n          c.cuisine_name AS cuisineName,\n          r.title AS title,\n          r.description AS description,\n          r.directions AS directions,\n          r.recipe_image AS recipeImage,\n          r.equipment_image AS recipeEquipmentImage,\n          r.ingredients_image AS recipeIngredientsImage,\n          r.cooking_image AS recipeCookingImage\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_users u ON u.user_id = r.author_id\n        INNER JOIN nobsc_recipe_types rt ON rt.recipe_type_id = r.recipe_type_id\n        INNER JOIN nobsc_cuisines c ON c.cuisine_id = r.cuisine_id\n        WHERE r.recipe_id = ? AND r.owner_id = ?\n      ",t="\n        SELECT m.method_name AS methodName\n        FROM nobsc_methods m\n        INNER JOIN nobsc_recipe_methods rm ON rm.method_id = m.method_id\n        WHERE rm.recipe_id = ?\n      ",s="\n        SELECT\n          re.amount AS amount,\n          e.equipment_name AS equipmentName\n        FROM nobsc_equipment e\n        INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n        WHERE re.recipe_id = ?\n      ",o="\n        SELECT\n          i.ingredient_name AS ingredientName,\n          ri.amount AS amount,\n          m.measurement_name AS measurementName\n        FROM nobsc_ingredients i\n        INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n        INNER JOIN nobsc_measurements m ON ri.measurement_id = m.measurement_id\n        WHERE ri.recipe_id = ?\n      ",a="\n        SELECT\n          r.title AS subrecipeTitle,\n          rs.amount AS amount,\n          m.measurement_name AS measurementName\n        FROM nobsc_recipes r\n        INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n        INNER JOIN nobsc_measurements m ON rs.measurement_id = m.measurement_id\n        WHERE rs.recipe_id = ?\n      ",[c]=await this.pool.execute(i,[e,n]),[d]=await this.pool.execute(t,[e]),[u]=await this.pool.execute(s,[e]),[p]=await this.pool.execute(o,[e]),[m]=await this.pool.execute(a,[e]);return r({recipe:c},{requiredMethods:d,requiredEquipment:u,requiredIngredients:p,requiredSubrecipes:m})}catch(e){console.log(e)}}async createRecipe(e){const{recipeTypeId:n,cuisineId:i,authorId:t,ownerId:s,title:r,description:o,directions:a,recipeImage:c,equipmentImage:d,ingredientsImage:u,cookingImage:p}=e,[m]=await this.pool.execute("\n      INSERT INTO nobsc_recipes (\n        recipe_type_id,\n        cuisine_id,\n        author_id,\n        owner_id,\n        title,\n        description,\n        directions,\n        recipe_image,\n        equipment_image,\n        ingredients_image,\n        cooking_image\n      ) VALUES (\n        ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?\n      )\n    ",[n,i,t,s,r,o,a,c,d,u,p]);return m}async updateRecipe(e,n){const{recipeTypeId:i,cuisineId:t,authorId:s,ownerId:r,title:o,description:a,directions:c,recipeImage:d,equipmentImage:u,ingredientsImage:p,cookingImage:m}=e,[l]=await this.pool.execute("\n      UPDATE nobsc_recipes\n      SET\n        recipe_type_id = ?,\n        cuisine_id = ?,\n        author_id = ?,\n        owner_id = ?,\n        title = ?,\n        description = ?,\n        directions = ?,\n        recipe_image = ?,\n        equipment_image = ?,\n        ingredients_image = ?,\n        cooking_image = ?\n      WHERE recipe_id = ?\n      LIMIT 1\n    ",[i,t,s,r,o,a,c,d,u,p,m,n]);return l}async deleteRecipe(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipes\n      WHERE recipe_id = ?\n      LIMIT 1\n    ",[e]);return n}async viewAllMyPrivateUserRecipes(e){const[n]=await this.pool.execute("\n      SELECT recipe_id, recipe_type_id, cuisine_id, title, recipe_image, owner_id\n      FROM nobsc_recipes\n      WHERE owner_id = ?\n      ORDER BY title ASC\n    ",[e]);return n}async viewAllMyPublicUserRecipes(e,n){const[i]=await this.pool.execute("\n      SELECT recipe_id, recipe_type_id, cuisine_id, title, recipe_image, owner_id\n      FROM nobsc_recipes\n      WHERE author_id = ? AND owner_id = ?\n      ORDER BY title ASC\n    ",[e,n]);return i}async viewMyPrivateUserRecipe(e,n){const[i]=await this.pool.execute("\n      SELECT\n        r.recipe_id AS recipeId,\n        u.username AS authorName,\n        u.avatar AS authorAvatar,\n        rt.recipe_type_name AS recipeTypeName,\n        c.cuisine_name AS cuisineName,\n        r.title AS title,\n        r.description AS description,\n        r.directions AS directions,\n        r.recipe_image AS recipeImage,\n        r.equipment_image AS recipeEquipmentImage,\n        r.ingredients_image AS recipeIngredientsImage,\n        r.cooking_image AS recipeCookingImage\n      FROM nobsc_recipes r\n      INNER JOIN nobsc_users u ON u.user_id = r.author_id\n      INNER JOIN nobsc_recipe_types rt ON rt.recipe_type_id = r.recipe_type_id\n      INNER JOIN nobsc_cuisines c ON c.cuisine_id = r.cuisine_id\n      WHERE r.recipe_id = ? AND r.owner_id = ?\n    ",[e,n]),[t]=await this.pool.execute("\n      SELECT m.method_name AS methodName\n      FROM nobsc_methods m\n      INNER JOIN nobsc_recipe_methods rm ON rm.method_id = m.method_id\n      WHERE rm.recipe_id = ?\n    ",[e]),[s]=await this.pool.execute("\n      SELECT\n        re.amount AS amount,\n        e.equipment_name AS equipmentName\n      FROM nobsc_equipment e\n      INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n      WHERE re.recipe_id = ?\n    ",[e]),[o]=await this.pool.execute("\n      SELECT\n        i.ingredient_name AS ingredientName,\n        ri.amount AS amount,\n        m.measurement_name AS measurementName\n      FROM nobsc_ingredients i\n      INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n      INNER JOIN nobsc_measurements m ON ri.measurement_id = m.measurement_id\n      WHERE ri.recipe_id = ?\n    ",[e]),[a]=await this.pool.execute("\n      SELECT\n        r.title AS subrecipeTitle,\n        rs.amount AS amount,\n        m.measurement_name AS measurementName\n      FROM nobsc_recipes r\n      INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n      INNER JOIN nobsc_measurements m ON rs.measurement_id = m.measurement_id\n      WHERE rs.recipe_id = ?\n    ",[e]);return r({recipe:i},{requiredMethods:t,requiredEquipment:s,requiredIngredients:o,requiredSubrecipes:a})}async viewMyPublicUserRecipe(e,n,i){const[t]=await this.pool.execute("\n      SELECT\n        r.recipe_id,\n        rt.recipe_type_name,\n        c.cuisine_name,\n        u.username AS author,\n        u.username AS owner,\n        r.title,\n        r.description,\n        r.directions,\n        md.method_name,\n        re.amount,\n        e.equipment_name,\n        ri.amount,\n        m.measurement_name AS ingredient_unit,\n        e.ingredient_name,\n        rs.amount,\n        m.measurement_name AS subrecipe_unit,\n        r.title AS subtitle,\n        r.recipe_image,\n        r.equipment_image,\n        r.ingredients_image,\n        r.cooking_image\n      FROM nobsc_recipes r\n      INNER JOIN nobsc_recipe_types rt ON rt.recipe_type_id = r.recipe_type_id\n      INNER JOIN nobsc_cuisines c ON c.cuisine_id = r.cuisine_id\n      INNER JOIN nobsc_users u ON u.user_id = r.author_id\n      INNER JOIN nobsc_user u ON u.user_id = r.owner_id\n      INNER JOIN nobsc_recipe_methods rmd ON rmd.recipe_id = r.recipe_id\n      INNER JOIN nobsc_recipe_methods rmd ON rmd.method_id = md.method_id \n      INNER JOIN nobsc_recipe_equipment re ON re.recipe_id = r.recipe_id\n      INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n      INNER JOIN nobsc_recipe_ingredients ri ON ri.recipe_id = r.recipe_id\n      INNER JOIN nobsc_recipe_ingredients ri ON ri.measurement_id = m.measurement_id\n      INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n      INNER JOIN nobsc_recipe_subrecipes rs ON rs.recipe_id = r.recipe_id\n      INNER JOIN nobsc_recipe_subrecipes rs ON rs.measurement_id = m.measurement_id\n      INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n      WHERE r.recipe_id = ? AND r.author_id = ? AND r.owner_id = ?\n    ",[e,n,i]);return t}async getInfoToEditMyUserRecipe(e,n,i){const[t]=await this.pool.execute("\n      SELECT\n        r.recipe_id AS recipeId,\n        r.recipe_type_id AS recipeTypeId,\n        r.cuisine_id AS cuisineId,\n        r.owner_id AS ownerId,\n        r.title AS title,\n        r.description AS description,\n        r.directions AS directions,\n        r.recipe_image AS recipeImage,\n        r.equipment_image AS recipeEquipmentImage,\n        r.ingredients_image AS recipeIngredientsImage,\n        r.cooking_image AS recipeCookingImage\n      FROM nobsc_recipes r\n      WHERE r.recipe_id = ? AND r.author_id = ? AND r.owner_id = ?\n    ",[e,n,i]),[s]=await this.pool.execute("\n      SELECT method_id AS methodId\n      FROM nobsc_recipe_methods\n      WHERE recipe_id = ?\n    ",[e]),[r]=await this.pool.execute("\n      SELECT\n        re.amount AS amount,\n        e.equipment_type_id AS equipmentTypeId,\n        re.equipment_id AS equipmentId\n      FROM nobsc_equipment e\n      INNER JOIN nobsc_recipe_equipment re ON re.equipment_id = e.equipment_id\n      WHERE re.recipe_id = ?\n    ",[e]),[o]=await this.pool.execute("\n      SELECT\n        ri.amount AS amount,\n        ri.measurement_id AS measurementId,\n        i.ingredient_type_id AS ingredientTypeId,\n        ri.ingredient_id AS ingredientId\n      FROM nobsc_ingredients i\n      INNER JOIN nobsc_recipe_ingredients ri ON ri.ingredient_id = i.ingredient_id\n      WHERE ri.recipe_id = ?\n    ",[e]),[a]=await this.pool.execute("\n      SELECT\n        rs.amount AS amount,\n        rs.measurement_id AS measurementId,\n        r.recipe_type_id AS recipeTypeId,\n        r.cuisine_id AS cuisineId,\n        rs.subrecipe_id AS subrecipeId\n      FROM nobsc_recipes r\n      INNER JOIN nobsc_recipe_subrecipes rs ON rs.subrecipe_id = r.recipe_id\n      WHERE rs.recipe_id = ?\n    ",[e]);return{recipe:t[0],requiredMethods:s,requiredEquipment:r,requiredIngredients:o,requiredSubrecipes:a}}async updateMyUserRecipe(e,n){const{recipeTypeId:i,cuisineId:t,authorId:s,ownerId:r,title:o,description:a,directions:c,recipeImage:d,equipmentImage:u,ingredientsImage:p,cookingImage:m}=e,[l]=await this.pool.execute("\n      UPDATE nobsc_recipes\n      SET\n        recipe_type_id = ?,\n        cuisine_id = ?,\n        title = ?,\n        description = ?,\n        directions = ?,\n        recipe_image = ?,\n        equipment_image = ?,\n        ingredients_image = ?,\n        cooking_image = ?\n      WHERE recipe_id = ? AND author_id = ? AND owner_id = ?\n      LIMIT 1\n    ",[i,t,o,a,c,d,u,p,m,n,s,r]);return l}async deleteMyPrivateUserRecipe(e,n,i){const[t]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipes\n      WHERE recipe_id = ? AND author_id = ? AND owner_id = ?\n      LIMIT 1\n    ",[e,n,i]);return t}async disownMyPublicUserRecipe(e,n,i){const[t]=await this.pool.execute("\n      UPDATE nobsc_recipes\n      SET author_id = ?\n      WHERE recipe_id = ? AND author_id = ? AND owner_id = 1\n      LIMIT 1\n    ",[e,n,i]);return t}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.deleteAllFavoritesOfRecipe=this.deleteAllFavoritesOfRecipe.bind(this),this.viewMyFavoriteRecipes=this.viewMyFavoriteRecipes.bind(this),this.createMyFavoriteRecipe=this.createMyFavoriteRecipe.bind(this),this.deleteMyFavoriteRecipe=this.deleteMyFavoriteRecipe.bind(this)}async deleteAllFavoritesOfRecipe(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_favorite_recipes\n      WHERE recipe_id = ?\n    ",[e]);return n}async viewMyFavoriteRecipes(e){const[n]=await this.pool.execute("\n      SELECT \n        f.recipe_id AS recipe_id,\n        r.title AS title,\n        r.recipe_image AS recipe_image,\n        r.owner_id AS owner_id\n      FROM nobsc_favorite_recipes f\n      INNER JOIN nobsc_recipes r ON r.recipe_id = f.recipe_id\n      WHERE f.user_id = ?\n      ORDER BY title\n    ",[e]);return n}async createMyFavoriteRecipe(e,n){const[i]=await this.pool.execute("\n      INSERT INTO nobsc_favorite_recipes (user_id, recipe_id)\n      VALUES (?, ?)\n    ",[e,n]);return i}async deleteMyFavoriteRecipe(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_favorite_recipes\n      WHERE user_id = ? AND recipe_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n,i){const t=i(18);e.exports=function(e,n,i){return e.session&&e.session.staffInfo.staffId?i():i(new t("Unauthorized",401))}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.getUserByEmail=this.getUserByEmail.bind(this),this.getUserByName=this.getUserByName.bind(this),this.getUserIdByUsername=this.getUserIdByUsername.bind(this),this.viewAllUsers=this.viewAllUsers.bind(this),this.viewUserById=this.viewUserById.bind(this),this.createUser=this.createUser.bind(this),this.setAvatar=this.setAvatar.bind(this)}async getUserByEmail(e){const[n]=await this.pool.execute("\n      SELECT user_id, email, pass, username, avatar\n      FROM nobsc_users\n      WHERE email = ?\n    ",[e]);return n}async getUserByName(e){const[n]=await this.pool.execute("\n      SELECT user_id, email, pass, username\n      FROM nobsc_users\n      WHERE username = ?\n    ",[e]);return n}async getUserIdByUsername(e){const[n]=await this.pool.execute("\n      SELECT user_id, avatar\n      FROM nobsc_users\n      WHERE username = ?\n    ",[e]);return n}async viewAllUsers(e,n){const[i]=await this.pool.execute("\n      SELECT username, avatar\n      FROM nobsc_users\n      ORDER BY username ASC\n      LIMIT ?, ?\n    ",[e,n]);if(!i)throw new Error("viewAllUsers failed");return i}async viewUserById(e){const[n]=await this.pool.execute("\n      SELECT username, avatar\n      FROM nobsc_users\n      WHERE user_id = ?\n    ",[e]);if(!n)throw new Error("viewUserById failed");return n}async createUser(e){const{email:n,pass:i,username:t}=e,[s]=await this.pool.execute("\n      INSERT INTO nobsc_users (email, pass, username)\n      VALUES (?, ?, ?)\n    ",[n,i,t]);if(!s)throw new Error("createUser failed");return s}async setAvatar(e,n){const[i]=await this.pool.execute("\n      UPDATE nobsc_users\n      SET avatar = ?\n      WHERE user_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.getAllPublicEquipmentForElasticSearchBulkInsert=this.getAllPublicEquipmentForElasticSearchBulkInsert.bind(this),this.countAllEquipment=this.countAllEquipment.bind(this),this.countEquipmentOfType=this.countEquipmentOfType.bind(this),this.countEquipmentOfTypes=this.countEquipmentOfTypes.bind(this),this.viewAllEquipment=this.viewAllEquipment.bind(this),this.viewEquipmentOfType=this.viewEquipmentOfType.bind(this),this.viewEquipmentOfTypes=this.viewEquipmentOfTypes.bind(this),this.viewAllOfficialEquipment=this.viewAllOfficialEquipment.bind(this),this.viewEquipmentById=this.viewEquipmentById.bind(this),this.createEquipment=this.createEquipment.bind(this),this.updateEquipment=this.updateEquipment.bind(this),this.deleteEquipment=this.deleteEquipment.bind(this),this.viewAllMyPrivateUserEquipment=this.viewAllMyPrivateUserEquipment.bind(this),this.viewMyPrivateUserEquipment=this.viewMyPrivateUserEquipment.bind(this),this.createMyPrivateUserEquipment=this.createMyPrivateUserEquipment.bind(this),this.updateMyPrivateUserEquipment=this.updateMyPrivateUserEquipment.bind(this),this.deleteMyPrivateUserEquipment=this.deleteMyPrivateUserEquipment.bind(this)}async getAllPublicEquipmentForElasticSearchBulkInsert(){try{const e=1,n="\n        SELECT\n          e.equipment_id AS equipmentId,\n          et.equipment_type_name AS equipmentTypeName,\n          e.equipment_name AS equipmentName,\n          e.equipment_image AS equipmentImage\n        FROM nobsc_equipment e\n        INNER JOIN nobsc_equipment_types et ON et.equipment_type_id = e.equipment_type_id\n        WHERE e.owner_id = ?\n      ",[i]=await this.pool.execute(n,[e]);let t=[];for(let e of i){const{equipmentId:n}=e;t.push({index:{_index:"equipment",_id:n}},e)}return t}catch(e){console.log(e)}}async countAllEquipment(){const[e]=await this.pool.execute("\n      SELECT COUNT(*) AS total\n      FROM nobsc_equipment\n      WHERE owner_id = 1\n    ");return e}async countEquipmentOfType(e){const[n]=await this.pool.execute("\n      SELECT COUNT(*) AS total\n      FROM nobsc_equipment\n      WHERE equipment_type_id = ? AND owner_id = 1\n    ",[e]);return n}async countEquipmentOfTypes(e,n){const i=`\n      SELECT COUNT(*) AS total\n      FROM nobsc_equipment\n      WHERE equipment_type_id IN (${e}) AND owner_id = 1\n    `,[t]=await this.pool.execute(i,n);return t}async viewAllEquipment(e,n){const[i]=await this.pool.execute("\n      SELECT equipment_id, equipment_name, equipment_type_id, equipment_image\n      FROM nobsc_equipment\n      WHERE owner_id = 1\n      ORDER BY equipment_name ASC\n      LIMIT ?, ?\n    ",[e,n]);return i}async viewEquipmentOfType(e,n,i){const[t]=await this.pool.execute("\n      SELECT equipment_id, equipment_name, equipment_type_id, equipment_image\n      FROM nobsc_equipment\n      WHERE equipment_type_id = ? AND owner_id = 1\n      ORDER BY equipment_name ASC\n      LIMIT ?, ?\n    ",[i,e,n]);return t}async viewEquipmentOfTypes(e,n,i,t){const s=`\n      SELECT equipment_id, equipment_name, equipment_type_id, equipment_image\n      FROM nobsc_equipment\n      WHERE equipment_type_id IN (${i}) AND owner_id = 1\n      ORDER BY equipment_name ASC\n      LIMIT ${e}, ${n}\n    `,[r]=await this.pool.execute(s,t);return r}async viewAllOfficialEquipment(){const[e]=await this.pool.execute("\n      SELECT equipment_id, equipment_type_id, equipment_name, equipment_image\n      FROM nobsc_equipment\n      WHERE owner_id = 1\n      ORDER BY equipment_name ASC\n    ");return e}async viewEquipmentById(e){const[n]=await this.pool.execute("\n      SELECT\n        e.equipment_id AS equipment_id,\n        t.equipment_type_name AS equipment_type_name\n        e.equipment_name AS equipment_name,\n        e.equipment_description AS equipment_description\n        e.equipment_image AS equipment_image\n      FROM nobsc_equipment e\n      INNER JOIN nobsc_equipment_types t ON e.equipment_type_id = t.equipment_type_id\n      WHERE owner_id = 1 AND equipment_id = ?\n    ",[e]);return n}async createEquipment(e){const{equipmentTypeId:n,authorId:i,ownerId:t,equipmentName:s,equipmentDescription:r,equipmentImage:o}=e,[a]=await this.pool.execute("\n      INSERT INTO nobsc_equipment\n      (equipment_type_id, author_id, owner_id, equipment_name, equipment_description, equipment_image) \n      VALUES (?, ?, ?, ?, ?, ?)\n    ",[n,i,t,s,r,o]);return a}async updateEquipment(e,n){const{equipmentTypeId:i,equipmentName:t,equipmentDescription:s,equipmentImage:r}=e,[o]=await this.pool.execute("\n      UPDATE nobsc_equipment\n      SET\n        equipment_type_id = ?,\n        equipment_name = ?,\n        equipment_description = ?,\n        equipment_image = ?\n      WHERE equipment_id = ?\n      LIMIT 1\n    ",[i,t,s,r,n]);return o}async deleteEquipment(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_equipment\n      WHERE equipment_id = ?\n      LIMIT 1\n    ",[e]);return n}async viewAllMyPrivateUserEquipment(e){const[n]=await this.pool.execute("\n      SELECT equipment_id, equipment_type_id, equipment_name, equipment_image, equipment_description\n      FROM nobsc_equipment\n      WHERE owner_id = ?\n      ORDER BY equipment_name ASC\n    ",[e]);return n}async viewMyPrivateUserEquipment(e,n){const[i]=await this.pool.execute("\n      SELECT\n        e.equipment_id AS equipment_id,\n        t.equipment_type_name AS equipment_type_name\n        e.equipment_name AS equipment_name,\n        e.equipment_description AS equipment_description\n        e.equipment_image AS equipment_image\n      FROM nobsc_equipment e\n      INNER JOIN nobsc_equipment_types t ON e.equipment_type_id = t.equipment_type_id\n      WHERE owner_id = ? AND equipment_id = ?\n    ",[e,n]);return i}async createMyPrivateUserEquipment(e){const{equipmentTypeId:n,authorId:i,ownerId:t,equipmentName:s,equipmentDescription:r,equipmentImage:o}=e,[a]=await this.pool.execute("\n      INSERT INTO nobsc_equipment\n      (equipment_type_id, author_id, owner_id, equipment_name, equipment_description, equipment_image)\n      VALUES\n      (?, ?, ?, ?, ?, ?)\n    ",[n,i,t,s,r,o]);return a}async updateMyPrivateUserEquipment(e,n){const{equipmentTypeId:i,authorId:t,ownerId:s,equipmentName:r,equipmentDescription:o,equipmentImage:a}=e,[c]=await this.pool.execute("\n      UPDATE nobsc_equipment\n      SET\n        equipment_type_id = ?,\n        author_id = ?,\n        owner_id = ?,\n        equipment_name = ?,\n        equipment_description = ?,\n        equipment_image = ?\n      WHERE owner_id = ? AND equipment_id = ?\n      LIMIT 1\n    ",[i,t,s,r,o,a,s,n]);return c}async deleteMyPrivateUserEquipment(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_equipment\n      WHERE owner_id = ? AND equipment_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.getAllPublicIngredientsForElasticSearchBulkInsert=this.getAllPublicIngredientsForElasticSearchBulkInsert.bind(this),this.countAllIngredients=this.countAllIngredients.bind(this),this.countIngredientsOfType=this.countIngredientsOfType.bind(this),this.countIngredientsOfTypes=this.countIngredientsOfTypes.bind(this),this.viewAllIngredients=this.viewAllIngredients.bind(this),this.viewIngredientsOfType=this.viewIngredientsOfType.bind(this),this.viewIngredientsOfTypes=this.viewIngredientsOfTypes.bind(this),this.viewAllOfficialIngredients=this.viewAllOfficialIngredients.bind(this),this.viewIngredientById=this.viewIngredientById.bind(this),this.createIngredient=this.createIngredient.bind(this),this.updateIngredient=this.updateIngredient.bind(this),this.deleteIngredient=this.deleteIngredient.bind(this),this.viewAllMyPrivateUserIngredients=this.viewAllMyPrivateUserIngredients.bind(this),this.viewMyPrivateUserIngredient=this.viewMyPrivateUserIngredient.bind(this),this.createMyPrivateUserIngredient=this.createMyPrivateUserIngredient.bind(this),this.updateMyPrivateUserIngredient=this.updateMyPrivateUserIngredient.bind(this),this.deleteMyPrivateUserIngredient=this.deleteMyPrivateUserIngredient.bind(this)}async getAllPublicIngredientsForElasticSearchBulkInsert(){try{const e=1,n="\n        SELECT\n          i.ingredient_id AS ingredientId,\n          it.ingredient_type_name AS ingredientTypeName,\n          i.ingredient_name AS ingredientName,\n          i.ingredient_image AS ingredientImage\n        FROM nobsc_ingredients i\n        INNER JOIN nobsc_ingredient_types it ON it.ingredient_type_id = i.ingredient_type_id\n        WHERE i.owner_id = ?\n      ",[i]=await this.pool.execute(n,[e]);let t=[];for(let e of i){const{ingredientId:n}=e;t.push({index:{_index:"ingredients",_id:n}},e)}return t}catch(e){console.log(e)}}async countAllIngredients(){const[e]=await this.pool.execute("\n      SELECT COUNT(*) AS total\n      FROM nobsc_ingredients\n    ");return e}async countIngredientsOfType(e){const[n]=await this.pool.execute("\n      SELECT COUNT(*) AS total\n      FROM nobsc_ingredients\n      WHERE ingredient_type_id = ?\n    ",[e]);return n}async countIngredientsOfTypes(e,n){const i=`\n      SELECT COUNT(*) AS total\n      FROM nobsc_ingredients\n      WHERE ingredient_type_id IN (${e})\n    `,[t]=await this.pool.execute(i,n);return t}async viewAllIngredients(e,n){const[i]=await this.pool.execute("\n      SELECT ingredient_id, ingredient_name, ingredient_type_id, ingredient_image\n      FROM nobsc_ingredients\n      ORDER BY ingredient_name ASC\n      LIMIT ?, ?\n    ",[e,n]);return i}async viewIngredientsOfType(e,n,i){const[t]=await this.pool.execute("\n      SELECT ingredient_id, ingredient_name, ingredient_type_id, ingredient_image\n      FROM nobsc_ingredients\n      WHERE ingredient_type_id = ?\n      ORDER BY ingredient_name ASC\n      LIMIT ?, ?\n    ",[i,e,n]);return t}async viewIngredientsOfTypes(e,n,i,t){const s=`\n      SELECT ingredient_id, ingredient_name, ingredient_type_id, ingredient_image\n      FROM nobsc_ingredients\n      WHERE ingredient_type_id IN (${i})\n      ORDER BY ingredient_name ASC\n      LIMIT ${e}, ${n}\n    `,[r]=await this.pool.execute(s,t);return r}async viewAllOfficialIngredients(){const[e]=await this.pool.execute("\n      SELECT ingredient_id, ingredient_type_id, ingredient_name, ingredient_image\n      FROM nobsc_ingredients\n      WHERE owner_id = 1\n      ORDER BY ingredient_name ASC\n    ");return e}async viewIngredientById(e){const[n]=await this.pool.execute("\n      SELECT\n        i.ingredient_id AS ingredient_id,\n        t.ingredient_type_name AS ingredient_type_name\n        i.ingredient_name AS ingredient_name,\n        i.ingredient_description AS ingredient_description,\n        i.ingredient_image AS ingredient_image\n      FROM nobsc_ingredients i\n      INNER JOIN nobsc_ingredient_types t ON i.ingredient_type_id = t.ingredient_type_id\n      WHERE owner_id = 1 AND ingredient_id = ?\n    ",[e]);return n}async createIngredient(e){const{ingredientTypeId:n,authorId:i,ownerId:t,ingredientName:s,ingredientDescription:r,ingredientImage:o}=e,[a]=await this.pool.execute("\n      INSERT INTO nobsc_ingredients\n      (ingredient_type_id, author_id, owner_id, ingredient_name, ingredient_description, ingredient_image)\n      VALUES\n      (?, ?, ?, ?, ?, ?)\n    ",[n,i,t,s,r,o]);return a}async updateIngredient(e,n){const{ingredientTypeId:i,ingredientName:t,ingredientDescription:s,ingredientImage:r}=e,[o]=await this.pool.execute("\n      UPDATE nobsc_ingredients\n      SET\n        ingredient_type_id = ?,\n        ingredient_name = ?,\n        ingredient_description = ?,\n        ingredient_image = ?\n      WHERE ingredient_id = ?\n      LIMIT 1\n    ",[i,t,s,r,n]);return o}async deleteIngredient(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_ingredients\n      WHERE ingredient_id = ?\n      LIMIT 1\n    ",[e]);return n}async viewAllMyPrivateUserIngredients(e){const[n]=await this.pool.execute("\n      SELECT ingredient_id, ingredient_type_id, ingredient_name, ingredient_image, ingredient_description\n      FROM nobsc_ingredients\n      WHERE owner_id = ?\n      ORDER BY ingredient_name ASC\n    ",[e]);return n}async viewMyPrivateUserIngredient(e,n){const[i]=await this.pool.execute("\n      SELECT\n        i.ingredient_id AS ingredient_id,\n        t.ingredient_type_name AS ingredient_type_name\n        i.ingredient_name AS ingredient_name,\n        i.ingredient_description AS ingredient_description,\n        i.ingredient_image AS ingredient_image\n      FROM nobsc_ingredients i\n      INNER JOIN nobsc_ingredient_types t ON i.ingredient_type_id = t.ingredient_type_id\n      WHERE owner_id = ? AND ingredient_id = ?\n    ",[e,n]);return i}async createMyPrivateUserIngredient(e){const{ingredientTypeId:n,authorId:i,ownerId:t,ingredientName:s,ingredientDescription:r,ingredientImage:o}=e,[a]=await this.pool.execute("\n      INSERT INTO nobsc_ingredients\n      (ingredient_type_id, author_id, owner_id, ingredient_name, ingredient_description, ingredient_image)\n      VALUES\n      (?, ?, ?, ?, ?, ?)\n    ",[n,i,t,s,r,o]);return a}async updateMyPrivateUserIngredient(e,n){const{ingredientTypeId:i,authorId:t,ownerId:s,ingredientName:r,ingredientDescription:o,ingredientImage:a}=e,[c]=await this.pool.execute("\n      UPDATE nobsc_ingredients\n      SET\n        ingredient_type_id = ?,\n        author_id = ?,\n        owner_id = ?,\n        ingredient_name = ?,\n        ingredient_description = ?,\n        ingredient_image = ?\n      WHERE owner_id = ? AND ingredient_id = ?\n      LIMIT 1\n    ",[i,t,s,r,o,a,s,n]);return c}async deleteMyPrivateUserIngredient(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_ingredients\n      WHERE owner_id = ? AND ingredient_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewRecipeEquipmentByRecipeId=this.viewRecipeEquipmentByRecipeId.bind(this),this.createRecipeEquipment=this.createRecipeEquipment.bind(this),this.updateRecipeEquipment=this.updateRecipeEquipment.bind(this),this.deleteRecipeEquipment=this.deleteRecipeEquipment.bind(this),this.deleteRecipeEquipmentByEquipmentId=this.deleteRecipeEquipmentByEquipmentId.bind(this)}async viewRecipeEquipmentByRecipeId(e){const[n]=await this.pool.execute("\n      SELECT re.amount, e.equipment_name\n      FROM nobsc_recipe_equipment re\n      INNER JOIN nobsc_equipment e ON e.equipment_id = re.equipment_id\n      WHERE re.recipe_id = ?\n      ORDER BY e.equipment_type_id\n    ",[e]);return n}async createRecipeEquipment(e,n){const i=`\n      INSERT INTO nobsc_recipe_equipment (recipe_id, equipment_id, amount)\n      VALUES ${n} \n    `,[t]=await this.pool.execute(i,e);return t}async updateRecipeEquipment(e,n,i){const t="none"!==e?`\n      INSERT INTO nobsc_recipe_equipment (recipe_id, equipment_id, amount)\n      VALUES ${n} \n    `:"none",s=await this.pool.getConnection();await s.beginTransaction();try{if(await s.query("\n      DELETE\n      FROM nobsc_recipe_equipment\n      WHERE recipe_id = ?\n    ",[i]),"none"!==t){const[n]=await s.query(t,e);return await s.commit(),n}await s.commit()}catch(e){throw await s.rollback(),e}finally{s.release()}}async deleteRecipeEquipment(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_equipment\n      WHERE recipe_id = ?\n    ",[e]);return n}async deleteRecipeEquipmentByEquipmentId(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_equipment\n      WHERE equipment_id = ?\n    ",[e]);return n}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewRecipeIngredientsByRecipeId=this.viewRecipeIngredientsByRecipeId.bind(this),this.createRecipeIngredients=this.createRecipeIngredients.bind(this),this.updateRecipeIngredients=this.updateRecipeIngredients.bind(this),this.deleteRecipeIngredients=this.deleteRecipeIngredients.bind(this),this.deleteRecipeIngredientsByIngredientId=this.deleteRecipeIngredientsByIngredientId.bind(this)}async viewRecipeIngredientsByRecipeId(e){const[n]=await this.pool.execute("\n      SELECT ri.amount, m.measurement_name, i.ingredient_name\n      FROM nobsc_recipe_ingredients ri\n      INNER JOIN nobsc_measurements m ON m.measurement_id = ri.measurement_id\n      INNER JOIN nobsc_ingredients i ON i.ingredient_id = ri.ingredient_id\n      WHERE ri.recipe_id = ?\n      ORDER BY i.ingredient_type_id\n    ",[e]);return n}async createRecipeIngredients(e,n){const i=`\n      INSERT INTO nobsc_recipe_ingredients (recipe_id, ingredient_id, amount, measurement_id)\n      VALUES ${n}\n    `,[t]=await this.pool.execute(i,e);return t}async updateRecipeIngredients(e,n,i){const t="none"!==e?`\n      INSERT INTO nobsc_recipe_ingredients (recipe_id, ingredient_id, amount, measurement_id)\n      VALUES ${n} \n    `:"none",s=await this.pool.getConnection();await s.beginTransaction();try{if(await s.query("\n      DELETE\n      FROM nobsc_recipe_ingredients\n      WHERE recipe_id = ?\n    ",[i]),"none"!==t){const[n]=await s.query(t,e);return await s.commit(),n}await s.commit()}catch(e){throw await s.rollback(),e}finally{s.release()}}async deleteRecipeIngredients(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_ingredients\n      WHERE recipe_id = ?\n    ",[e]);return n}async deleteRecipeIngredientsByIngredientId(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_ingredients\n      WHERE ingredient_id = ?\n    ",[e]);return n}}},function(e,n,i){"use strict";const t=i(149),s=new t({host:process.env.ELASTICACHE_PROD_PRIMARY,port:6379}),r=new t({host:process.env.ELASTICACHE_PROD_PRIMARY,port:6379}),o=new t({host:process.env.ELASTICACHE_PROD_PRIMARY,port:6379}),a=new t({host:process.env.ELASTICACHE_PROD_PRIMARY,port:6379});s.on("connect",()=>console.log("pub connect!!!!!!!!!!!")),s.on("ready",()=>console.log("pub ready!!!!!!!!!!!")),s.on("error",()=>console.log("pub error!!!!!!!!!!!")),s.on("close",()=>console.log("pub close!!!!!!!!!!!")),r.on("connect",()=>console.log("sub connect!!!!!!!!!!!")),r.on("ready",()=>console.log("sub ready!!!!!!!!!!!")),r.on("error",()=>console.log("sub error!!!!!!!!!!!")),r.on("close",()=>console.log("sub close!!!!!!!!!!!")),o.on("connect",()=>console.log("sess connect!!!!!!!!!!!")),o.on("ready",()=>console.log("sess ready!!!!!!!!!!!")),o.on("error",()=>console.log("sess error!!!!!!!!!!!")),o.on("close",()=>console.log("sess close!!!!!!!!!!!")),a.on("connect",()=>console.log("worker connect!!!!!!!!!!!")),a.on("ready",()=>console.log("worker ready!!!!!!!!!!!")),a.on("error",()=>console.log("worker error!!!!!!!!!!!")),a.on("close",()=>console.log("worker close!!!!!!!!!!!")),e.exports={pubClient:s,subClient:r,sessClient:o,workerClient:a}},function(e,n){e.exports=require("@babel/runtime/helpers/defineProperty")},function(e,n){class i extends Error{constructor(e,n){super(e),this.status=n}}e.exports=i},function(e,n){e.exports=require("bcrypt")},function(e,n,i){const{struct:t}=i(2),s=t({equipmentTypeId:"number",authorId:"number",ownerId:"number",equipmentName:"string",equipmentDescription:"string",equipmentImage:"string"},{equipmentImage:"nobsc-equipment-default"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({ingredientTypeId:"number",authorId:"number",ownerId:"number",ingredientName:"string",ingredientDescription:"string",ingredientImage:"string"},{ingredientImage:"nobsc-ingredient-default"});e.exports=s},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewRecipeMethodsByRecipeId=this.viewRecipeMethodsByRecipeId.bind(this),this.createRecipeMethods=this.createRecipeMethods.bind(this),this.updateRecipeMethods=this.updateRecipeMethods.bind(this),this.deleteRecipeMethods=this.deleteRecipeMethods.bind(this)}async viewRecipeMethodsByRecipeId(e){const[n]=await this.pool.execute("\n      SELECT m.method_name\n      FROM nobsc_recipe_methods rm\n      INNER JOIN nobsc_methods m ON m.method_id = rm.method_id\n      WHERE rm.recipe_id = ?\n      ORDER BY m.method_id\n    ",[e]);return n}async createRecipeMethods(e,n){const i=`\n      INSERT INTO nobsc_recipe_methods (recipe_id, method_id)\n      VALUES ${n} \n    `,[t]=await this.pool.execute(i,e);return t}async updateRecipeMethods(e,n,i){const t="none"!==e?`\n      INSERT INTO nobsc_recipe_methods (recipe_id, method_id)\n      VALUES ${n} \n    `:"none",s=await this.pool.getConnection();await s.beginTransaction();try{if(await s.query("\n      DELETE\n      FROM nobsc_recipe_methods\n      WHERE recipe_id = ?\n    ",[i]),"none"!==t){const[n]=await s.query(t,e);return await s.commit(),n}await s.commit()}catch(e){throw await s.rollback(),e}finally{s.release()}}async deleteRecipeMethods(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_methods\n      WHERE recipe_id = ?\n    ",[e]);return n}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewRecipeSubrecipesByRecipeId=this.viewRecipeSubrecipesByRecipeId.bind(this),this.createRecipeSubrecipes=this.createRecipeSubrecipes.bind(this),this.updateRecipeSubrecipes=this.updateRecipeSubrecipes.bind(this),this.deleteRecipeSubrecipes=this.deleteRecipeSubrecipes.bind(this),this.deleteRecipeSubrecipesBySubrecipeId=this.deleteRecipeSubrecipesBySubrecipeId.bind(this)}async viewRecipeSubrecipesByRecipeId(e){const[n]=await this.pool.execute("\n      SELECT rs.amount, m.measurement_name, r.title\n      FROM nobsc_recipe_subrecipes rs\n      INNER JOIN nobsc_measurements m ON m.measurement_id = rs.measurement_id\n      INNER JOIN nobsc_recipes r ON r.recipe_id = rs.subrecipe_id\n      WHERE rs.recipe_id = ?\n      ORDER BY r.recipe_type_id\n    ",[e]);return n}async createRecipeSubrecipes(e,n){const i=`\n      INSERT INTO nobsc_recipe_subrecipes (recipe_id, subrecipe_id, amount, measurement_id)\n      VALUES ${n}\n    `,[t]=await this.pool.execute(i,e);return t}async updateRecipeSubrecipes(e,n,i){const t="none"!==e?`\n      INSERT INTO nobsc_recipe_subrecipes (recipe_id, subrecipe_id, amount, measurement_id)\n      VALUES ${n} \n    `:"none",s=await this.pool.getConnection();await s.beginTransaction();try{if(await s.query("\n      DELETE\n      FROM nobsc_recipe_subrecipes\n      WHERE recipe_id = ?\n    ",[i]),"none"!==t){const[n]=await s.query(t,e);return await s.commit(),n}await s.commit()}catch(e){throw await s.rollback(),e}finally{s.release()}}async deleteRecipeSubrecipes(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_subrecipes\n      WHERE recipe_id = ?\n    ",[e]);return n}async deleteRecipeSubrecipesBySubrecipeId(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_recipe_subrecipes\n      WHERE subrecipe_id = ?\n    ",[e]);return n}}},function(e,n){e.exports=class{constructor(e){this.pool=e,this.deleteAllSavesOfRecipe=this.deleteAllSavesOfRecipe.bind(this),this.viewMySavedRecipes=this.viewMySavedRecipes.bind(this),this.createMySavedRecipe=this.createMySavedRecipe.bind(this),this.deleteMySavedRecipe=this.deleteMySavedRecipe.bind(this)}async deleteAllSavesOfRecipe(e){const[n]=await this.pool.execute("\n      DELETE\n      FROM nobsc_saved_recipes\n      WHERE recipe_id = ?\n    ",[e]);return n}async viewMySavedRecipes(e){const[n]=await this.pool.execute("\n      SELECT \n        s.recipe_id AS recipe_id,\n        r.title AS title,\n        r.recipe_image AS recipe_image,\n        r.owner_id AS owner_id\n      FROM nobsc_saved_recipes s\n      INNER JOIN nobsc_recipes r ON r.recipe_id = s.recipe_id\n      WHERE user_id = ?\n      ORDER BY title\n    ",[e]);return n}async createMySavedRecipe(e,n){const[i]=await this.pool.execute("\n      INSERT INTO nobsc_saved_recipes (user_id, recipe_id)\n      VALUES (?, ?)\n    ",[e,n]);return i}async deleteMySavedRecipe(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_saved_recipes\n      WHERE user_id = ? AND recipe_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n,i){const{struct:t}=i(2),s=t({recipeTypeId:"number",cuisineId:"number",authorId:"number",ownerId:"number",title:"string",description:"string",directions:"string",recipeImage:"string",equipmentImage:"string",ingredientsImage:"string",cookingImage:"string"},{recipeImage:"nobsc-recipe-default",equipmentImage:"nobsc-recipe-equipment-default",ingredientsImage:"nobsc-recipe-ingredients-default",cookingImage:"nobsc-recipe-cooking-default"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({recipeId:"number",methodId:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({recipeId:"number",equipmentId:"number",amount:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({recipeId:"number",ingredientId:"number",amount:"number",measurementId:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({recipeId:"number",subrecipeId:"number",amount:"number",measurementId:"number"});e.exports=s},function(e,n){e.exports=class{constructor(e){this.pool=e,this.getFriendshipByFriendId=this.getFriendshipByFriendId.bind(this),this.checkIfBlockedBy=this.checkIfBlockedBy.bind(this),this.viewAllMyFriendships=this.viewAllMyFriendships.bind(this),this.viewAllMyAcceptedFriendships=this.viewAllMyAcceptedFriendships.bind(this),this.viewAllMyBlockedUsers=this.viewAllMyBlockedUsers.bind(this),this.createFriendship=this.createFriendship.bind(this),this.acceptFriendship=this.acceptFriendship.bind(this),this.rejectFriendship=this.rejectFriendship.bind(this),this.deleteFriendship=this.deleteFriendship.bind(this),this.blockUser=this.blockUser.bind(this),this.unblockUser=this.unblockUser.bind(this)}async getFriendshipByFriendId(e,n){const[i]=await this.pool.execute("\n      SELECT user_id, friend_id, status\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ?\n    ",[e,n]);return i}async checkIfBlockedBy(e,n){const[i]=await this.pool.execute('\n      SELECT user_id, friend_id\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ? AND status = "blocked"\n    ',[n,e]);return i}async viewAllMyFriendships(e){const[n]=await this.pool.execute('\n      SELECT\n        u.user_id AS user_id,\n        u.username AS username,\n        u.avatar AS avatar,\n        f.status AS status\n      FROM nobsc_users u\n      INNER JOIN nobsc_friendships f ON u.user_id = f.friend_id\n      WHERE f.user_id = ? AND f.status IN ("accepted", "pending-received", "blocked")\n    ',[e]);return n}async viewAllMyAcceptedFriendships(e){const[n]=await this.pool.execute('\n      SELECT\n        u.user_id AS user_id,\n        u.username AS username,\n        u.avatar AS avatar,\n        f.status AS status\n      FROM nobsc_users u\n      INNER JOIN nobsc_friendships f ON u.user_id = f.friend_id\n      WHERE f.user_id = ? AND f.status = "accepted"\n    ',[e]);return n}async viewAllMyPendingFriendships(e){const[n]=await this.pool.execute('\n      SELECT\n        u.user_id AS user_id,\n        u.username AS username,\n        u.avatar AS avatar,\n        f.status AS status\n      FROM nobsc_users u\n      INNER JOIN nobsc_friendships f ON u.user_id = f.friend_id\n      WHERE f.user_id = ? AND f.status = "pending-received"\n    ',[e]);return n}async viewAllMyBlockedUsers(e){const[n]=await this.pool.execute('\n      SELECT\n        u.user_id AS user_id,\n        u.username AS username,\n        u.avatar AS avatar,\n        f.status AS status\n      FROM nobsc_users u\n      INNER JOIN nobsc_friendships f ON u.user_id = f.friend_id\n      WHERE f.user_id = ? AND f.status = "blocked"\n    ',[e]);return n}async createFriendship(e){const{userId:n,friendId:i,status1:t,status2:s}=e,r="\n      INSERT INTO nobsc_friendships (user_id, friend_id, status)\n      VALUES (?, ?, ?)\n    ",[o]=await this.pool.execute(r,[n,i,t]);return await this.pool.execute(r,[i,n,s]),o}async acceptFriendship(e,n){const[i]=await this.pool.execute('\n      UPDATE nobsc_friendships\n      SET status = "accepted"\n      WHERE user_id = ? AND friend_id = ? AND status = "pending-received"\n      LIMIT 1\n    ',[e,n]);return await this.pool.execute('\n      UPDATE nobsc_friendships\n      SET status = "accepted"\n      WHERE user_id = ? AND friend_id = ? AND status = "pending-sent"\n      LIMIT 1\n    ',[n,e]),i}async rejectFriendship(e,n){const i='\n      DELETE\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ? AND status != "blocked"\n      LIMIT 1\n    ',[t]=await this.pool.execute(i,[e,n]);return await this.pool.execute(i,[n,e]),t}async deleteFriendship(e,n){const i='\n      DELETE\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ? AND status != "blocked"\n      LIMIT 1\n    ',[t]=await this.pool.execute(i,[e,n]);return await this.pool.execute(i,[n,e]),t}async blockUser(e,n){const i="\n      DELETE\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ?\n      LIMIT 1\n    ";await this.pool.execute(i,[e,n]),await this.pool.execute(i,[n,e]);const[t]=await this.pool.execute('\n      INSERT INTO nobsc_friendships (user_id, friend_id, status)\n      VALUES (?, ?, "blocked")\n    ',[e,n]);return t}async unblockUser(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_friendships\n      WHERE user_id = ? AND friend_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n,i){"use strict";const{Client:t,errors:s}=i(142),r=new t({node:process.env.ELASTICSEARCH_PROD});e.exports=r},function(e,n){e.exports=class{constructor(e){this.client=e,this.findRecipes=this.findRecipes.bind(this),this.autoRecipes=this.autoRecipes.bind(this),this.saveRecipe=this.saveRecipe.bind(this)}async findRecipes(e){const{body:n}=await this.client.search({index:"recipes",body:e});return n}async autoRecipes(e){const{body:n}=await this.client.search({index:"recipes",body:{highlight:{fragment_size:200,number_of_fragments:1,fields:{title:{}}},query:{bool:{must:[{match:{title:{query:e,operator:"and"}}}]}}},from:0,size:5});return n}async saveRecipe(e){const{recipeId:n,authorName:i,recipeTypeName:t,cuisineName:s,title:r,description:o,directions:a,recipeImage:c,methodNames:d,equipmentNames:u,ingredientNames:p,subrecipeNames:m}=e;await this.client.index({index:"recipes",id:n,body:{recipeId:n,authorName:i,recipeTypeName:t,cuisineName:s,title:r,description:o,directions:a,recipeImage:c,methodNames:d,equipmentNames:u,ingredientNames:p,subrecipeNames:m}}),await this.client.indices.refresh({index:"recipes"})}}},function(e,n){e.exports=class{constructor(e){this.client=e,this.getUserSocketId=this.getUserSocketId.bind(this),this.addUser=this.addUser.bind(this),this.removeUser=this.removeUser.bind(this)}async getUserSocketId(e){try{return await this.client.hget(`user:${e}`,"socketid")}catch(e){console.error(e)}}async addUser(e,n,i,t,s){try{await this.client.multi().hset(`user:${e}`,"name",n).hset(`user:${e}`,"avatar",i).hset(`user:${e}`,"sid",t).hset(`user:${e}`,"socketid",s).zadd("users",Date.now(),e).exec()}catch(e){console.error(e)}}async removeUser(e){try{await this.client.multi().zrem("users",e).del(`user:${e}`).exec()}catch(e){console.error(e)}}}},function(e,n,i){"use strict";i(35),i(5).config();const t=i(0),s=i(36),r=i(37),o=i(38),a=i(39),c=i(40),d=i(41),u=i(42),p=i(43),m=i(44),l=i(45),I=i(46),_=i(47),{equipmentRoutes:g,equipmentTypeRoutes:y,ingredientRoutes:h,ingredientTypeRoutes:f,recipeRoutes:E,recipeTypeRoutes:w,cuisineRoutes:b,methodRoutes:R,measurementRoutes:v,favoriteRecipeRoutes:N,staffRoutes:S,userRoutes:q,searchRoutes:A}=i(48),O=i(148),T=i(152),M=i(33),{pubClient:x,subClient:U,sessClient:C,workerClient:P}=i(16),F=t(),B={origin:["http://localhost:8080"],credentials:!0},D=p.Server(F),z=m(D,{pingTimeout:6e4}),L=new(u(d))({client:C}),W={store:L,name:"connect.sid",secret:process.env.SESSION_SECRET||"secret",resave:!0,saveUninitialized:!0,unset:"destroy"},k=d(W);"production"===F.get("env")?(F.set("trust proxy",1),B.origin=["https://nobullshitcooking.com"]):"development"===F.get("env")&&(W.cookie={sameSite:!1,maxAge:864e5,httpOnly:!1,secure:!1}),F.use(t.json()),F.use(t.urlencoded({extended:!1})),F.use(s({windowMs:6e4,max:1e3})),F.use(k),F.use(o(B)),F.use(a()),F.use(r()),F.use(c()),z.adapter(l({pubClient:x,subClient:U})),z.use((e,n)=>{const i=I.parse(e.request.headers.cookie),t=_.signedCookie(i["connect.sid"],process.env.SESSION_SECRET),s=e.id;if(i["connect.sid"]===t)return n(new Error("Not authenticated."));L.get(t,(function(i,r){if(r.userInfo.userId){return e.request.userInfo=r.userInfo,e.request.sid=t,new M(x).addUser(r.userInfo.userId,r.userInfo.username,r.userInfo.avatar,t,s),n()}return n(new Error("Not authenticated."))}))}),z.on("connection",O);let H;setInterval(T,108e5),F.get("/",(e,n)=>{try{n.send("No Bullshit Cooking Backend API.")}catch(e){console.log(e)}}),F.use("/equipment",g),F.use("/equipment-type",y),F.use("/ingredient",h),F.use("/ingredient-type",f),F.use("/recipe",E),F.use("/recipe-type",w),F.use("/cuisine",b),F.use("/method",R),F.use("/measurement",v),F.use("/favorite-recipe",N),F.use("/staff",S),F.use("/user",q),F.use("/search",A),process.on("unhandledRejection",(e,n)=>{console.log("Unhandled Rejection at:",e.stack||e)}),"development"===F.get("env")?F.use((e,n,i,t)=>{i.status(e.statusCode||500).json({error:e})}):F.use((e,n,i,t)=>{i.status(e.statusCode||500).json({error:e.message})}),"production"===F.get("env")?(H=process.env.PORT||8081,D.listen(H,"127.0.0.1",()=>console.log("Listening on port "+H))):(H=process.env.PORT||3003,D.listen(H,"0.0.0.0",()=>console.log("Listening on port "+H)))},function(e,n){e.exports=require("regenerator-runtime/runtime")},function(e,n){e.exports=require("express-rate-limit")},function(e,n){e.exports=require("express-sanitizer")},function(e,n){e.exports=require("cors")},function(e,n){e.exports=require("helmet")},function(e,n){e.exports=require("compression")},function(e,n){e.exports=require("express-session")},function(e,n){e.exports=require("connect-redis")},function(e,n){e.exports=require("http")},function(e,n){e.exports=require("socket.io")},function(e,n){e.exports=require("socket.io-redis")},function(e,n){e.exports=require("cookie")},function(e,n){e.exports=require("cookie-parser")},function(e,n,i){const t=i(49),s=i(54),r=i(58),o=i(62),a=i(66),c=i(70),d=i(74),u=i(78),p=i(82),m=i(86),l=i(88),I=i(101),_=i(143);e.exports={equipmentRoutes:t,equipmentTypeRoutes:s,ingredientRoutes:r,ingredientTypeRoutes:o,recipeRoutes:a,recipeTypeRoutes:c,cuisineRoutes:d,methodRoutes:u,measurementRoutes:p,favoriteRecipeRoutes:m,staffRoutes:l,userRoutes:I,searchRoutes:_}},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(50),o=t();o.post("/",s(r.viewEquipment)),o.get("/official/all",s(r.viewAllOfficialEquipment)),o.get("/:equipmentId",s(r.viewEquipmentDetail)),e.exports=o},function(e,n,i){const t=i(3),s=i(12),r=i(52),o=i(53),a={viewEquipment:async function(e,n,i){try{const o=e.body.types?e.body.types:[],a=e.body.start?Number(e.sanitize(e.body.start)):0,c=25;r({types:o,starting:a,display:c});const d=new s(t);if(o.length>1){const e="?, ".repeat(o.length-1)+"?",i=await d.viewEquipmentOfTypes(a,c,e,o);let t=(await d.countEquipmentOfTypes(e,o))[0].total,s=t>c?Math.ceil(t/c):1;n.send({rows:i,pages:s,starting:a})}if(1==o.length){let e=`${o}`;const i=await d.viewEquipmentOfType(a,c,e);let t=(await d.countEquipmentOfType(e))[0].total,s=t>c?Math.ceil(t/c):1;n.send({rows:i,pages:s,starting:a})}if(0==o.length){const e=await d.viewAllEquipment(a,c);let i=(await d.countAllEquipment())[0].total,t=i>c?Math.ceil(i/c):1;n.send({rows:e,pages:t,starting:a})}i()}catch(e){i(e)}},viewAllOfficialEquipment:async function(e,n){const i=new s(t),r=await i.viewAllOfficialEquipment();n.send(r)},viewEquipmentDetail:async function(e,n){const i=Number(e.sanitize(e.params.equipmentId));o({equipmentId:i});const r=new s(t),[a]=await r.viewEquipmentById(i);n.send(a)}};e.exports=a},function(e,n){e.exports=require("mysql2/promise")},function(e,n,i){const{struct:t}=i(2),s=t({types:["string?|number?"],starting:"number",display:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({equipmentId:"number",equipmentTypeId:"number?",equipmentName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(55),o=t();o.get("/",s(r.viewAllEquipmentTypes)),o.get("/:equipmentTypeId",s(r.viewEquipmentTypeById)),e.exports=o},function(e,n,i){const t=i(3),s=i(56),r=i(57),o={viewAllEquipmentTypes:async function(e,n){const i=new s(t),r=await i.viewAllEquipmentTypes();n.send(r)},viewEquipmentTypeById:async function(e,n){const i=Number(e.sanitize(e.params.equipmentTypeId));r({equipmentTypeId:i});const o=new s(t),[a]=await o.viewEquipmentTypeById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllEquipmentTypes=this.viewAllEquipmentTypes.bind(this),this.viewEquipmentTypeById=this.viewEquipmentTypeById.bind(this)}async viewAllEquipmentTypes(){const[e]=await this.pool.execute("\n      SELECT equipment_type_id, equipment_type_name\n      FROM nobsc_equipment_types\n    ");return e}async viewEquipmentTypeById(e){const[n]=await this.pool.execute("\n      SELECT equipment_type_id, equipment_type_name\n      FROM nobsc_equipment_types\n      WHERE equipment_type_id = ?\n    ",[e]);return n}}},function(e,n,i){const{struct:t}=i(2),s=t({equipmentTypeId:"number",equipmentTypeName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(59),o=t();o.post("/",s(r.viewIngredient)),o.get("/official/all",s(r.viewAllOfficialIngredients)),o.get("/:ingredientId",s(r.viewIngredientDetail)),e.exports=o},function(e,n,i){const t=i(3),s=i(13),r=i(60),o=i(61),a={viewIngredient:async function(e,n,i){try{const o=e.body.types?e.body.types:[],a=e.body.start?Number(e.sanitize(e.body.start)):0,c=25;r({types:o,starting:a,display:c});const d=new s(t);if(o.length>1){const e="?, ".repeat(o.length-1)+"?",i=await d.viewIngredientsOfTypes(a,c,e,o);let t=(await d.countIngredientsOfTypes(e,o))[0].total,s=t>c?Math.ceil(t/c):1;n.send({rows:i,pages:s,starting:a})}if(1==o.length){let e=`${o}`;const i=await d.viewIngredientsOfType(a,c,e);let t=(await d.countIngredientsOfType(e))[0].total,s=t>c?Math.ceil(t/c):1;n.send({rows:i,pages:s,starting:a})}if(0==o.length){const e=await d.viewAllIngredients(a,c);let i=(await d.countAllIngredients())[0].total,t=i>c?Math.ceil(i/c):1;n.send({rows:e,pages:t,starting:a})}i()}catch(e){i(e)}},viewAllOfficialIngredients:async function(e,n){const i=new s(t),r=await i.viewAllOfficialIngredients();n.send(r)},viewIngredientDetail:async function(e,n){const i=Number(e.sanitize(e.params.ingredientId));o({ingredientId:i});const r=new s(t),[a]=await r.viewIngredientById(i);n.send(a)}};e.exports=a},function(e,n,i){const{struct:t}=i(2),s=t({types:["string?|number?"],starting:"number",display:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({ingredientId:"number",ingredientTypeId:"number?",ingredientName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(63),o=t();o.get("/",s(r.viewAllIngredientTypes)),o.get("/:ingredientTypeId",s(r.viewIngredientTypeById)),e.exports=o},function(e,n,i){const t=i(3),s=i(64),r=i(65),o={viewAllIngredientTypes:async function(e,n){const i=new s(t),r=await i.viewAllIngredientTypes();n.send(r)},viewIngredientTypeById:async function(e,n){const i=Number(e.sanitize(e.params.ingredientTypeId));r({ingredientTypeId:i});const o=new s(t),[a]=await o.viewIngredientTypeById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllIngredientTypes=this.viewAllIngredientTypes.bind(this),this.viewIngredientTypeById=this.viewIngredientTypeById.bind(this)}async viewAllIngredientTypes(){const[e]=await this.pool.execute("\n      SELECT ingredient_type_id, ingredient_type_name\n      FROM nobsc_ingredient_types\n    ");return e}async viewIngredientTypeById(e){const[n]=await this.pool.execute("\n      SELECT ingredient_type_id, ingredient_type_name\n      FROM nobsc_ingredient_types\n      WHERE ingredient_type_id = ?\n    ",[e]);return console.log(n),n}}},function(e,n,i){const{struct:t}=i(2),s=t({ingredientTypeId:"number",ingredientTypeName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(67),o=t();o.post("/",s(r.viewRecipe)),o.get("/official/all",s(r.viewAllOfficialRecipes)),o.get("/public/all",s(r.viewAllPublicRecipes)),o.get("/:recipeId",s(r.viewRecipeDetail)),e.exports=o},function(e,n,i){const t=i(3),s=i(8),r=i(68),o=i(69),a={viewRecipe:async function(e,n,i){try{const o=e.body.types?e.body.types:[],a=e.body.cuisines?e.body.cuisines:[],c=e.body.start?e.sanitize(e.body.start):0,d=25;r({types:o,cuisines:a,starting:c,display:d});const u=new s(t);if(a.length>1){const e="?, ".repeat(a.length-1)+"?";if(o.length>1){let i=a.concat(o);const t="?, ".repeat(o.length-1)+"?",s=await u.viewRecipesOfCuisinesAndTypes(c,d,e,t,i);let r=(await u.countRecipesOfCuisinesAndTypes(e,t,i))[0].total,p=r>d?Math.ceil(r/d):1;n.send({rows:s,pages:p,starting:c})}if(1==o.length){let i=a.concat(o);const t=await u.viewRecipesOfCuisinesAndType(c,d,e,i);let s=(await u.countRecipesOfCuisinesAndType(e,i))[0].total,r=s>d?Math.ceil(s/d):1;n.send({rows:t,pages:r,starting:c})}if(0==o.length){const i=await u.viewRecipesOfCuisines(c,d,e,a);let t=(await u.countRecipesOfCuisines(e,a))[0].total,s=t>d?Math.ceil(t/d):1;n.send({rows:i,pages:s,starting:c})}}if(1==a.length){if(o.length>1){let e=a.concat(o);const i="?, ".repeat(o.length-1)+"?",t=await u.viewRecipesOfCuisineAndTypes(c,d,i,e);let s=(await u.countRecipesOfCuisineAndTypes(i,e))[0].total,r=s>d?Math.ceil(s/d):1;n.send({rows:t,pages:r,starting:c})}if(1==o.length){let e=a.concat(o);const i=await u.viewRecipesOfCuisineAndType(c,d,e);let t=(await u.countRecipesOfCuisineAndType(e))[0].total,s=t>d?Math.ceil(t/d):1;n.send({rows:i,pages:s,starting:c})}if(0==o.length){let e=`${a}`;const i=await u.viewRecipesOfCuisine(c,d,e);let t=(await u.countRecipesOfCuisine(e))[0].total,s=t>d?Math.ceil(t/d):1;n.send({rows:i,pages:s,starting:c})}}if(0==a.length){if(o.length>1){const e="?, ".repeat(o.length-1)+"?",i=await u.viewRecipesOfTypes(c,d,e,o);let t=(await u.countRecipesOfTypes(e,o))[0].total,s=t>d?Math.ceil(t/d):1;n.send({rows:i,pages:s,starting:c})}if(1==o.length){let e=`${o}`;const i=await u.viewRecipesOfType(c,d,e);let t=(await u.countRecipesOfType(e))[0].total,s=t>d?Math.ceil(t/d):1;n.send({rows:i,pages:s,starting:c})}if(0==o.length){const e=await u.viewAllRecipes(c,d);let i=(await u.countAllRecipes())[0].total,t=i>d?Math.ceil(i/d):1;n.send({rows:e,pages:t,starting:c})}}i()}catch(e){i(e)}},viewAllOfficialRecipes:async function(e,n){const i=new s(t),r=await i.viewAllOfficialRecipes();n.send(r)},viewAllPublicRecipes:async function(e,n){const i=new s(t),r=await i.viewAllPublicRecipes();n.send(r)},viewRecipeDetail:async function(e,n,i){try{const r=Number(e.sanitize(e.params.recipeId));o({recipeId:r});const a=new s(t),c=await a.viewRecipeById(r);n.send(c),i()}catch(e){i(e)}}};e.exports=a},function(e,n,i){const{struct:t}=i(2),s=t({types:["string?|number?"],cuisines:["string?|number?"],starting:"number",display:"number"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({recipeId:"number",recipeTypeId:"number?",cuisineId:"number?",title:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(71),o=t();o.get("/",s(r.viewAllRecipeTypes)),o.get("/:recipeTypeId",s(r.viewRecipeTypeById)),e.exports=o},function(e,n,i){const t=i(3),s=i(72),r=i(73),o={viewAllRecipeTypes:async function(e,n){const i=new s(t),r=await i.viewAllRecipeTypes();n.send(r)},viewRecipeTypeById:async function(e,n){const i=Number(e.sanitize(e.params.recipeTypeId));r({recipeTypeId:i});const o=new s(t),[a]=await o.viewRecipeTypeById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllRecipeTypes=this.viewAllRecipeTypes.bind(this),this.viewRecipeTypeById=this.viewRecipeTypeById.bind(this)}async viewAllRecipeTypes(){const[e]=await this.pool.execute("\n      SELECT recipe_type_id, recipe_type_name\n      FROM nobsc_recipe_types\n    ");return e}async viewRecipeTypeById(e){const[n]=await this.pool.execute("\n      SELECT recipe_type_id, recipe_type_name\n      FROM nobsc_recipe_types\n      WHERE recipe_type_id = ?\n    ",[e]);return n}}},function(e,n,i){const{struct:t}=i(2),s=t({recipeTypeId:"number",recipeTypeName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(75),o=t();o.get("/",s(r.viewAllCuisines)),o.get("/:cuisineId",s(r.viewCuisineById)),e.exports=o},function(e,n,i){const t=i(3),s=i(76),r=i(77),o={viewAllCuisines:async function(e,n){const i=new s(t),r=await i.viewAllCuisines();n.send(r)},viewCuisineById:async function(e,n){const i=Number(e.sanitize(e.params.cuisineId));r({cuisineId:i});const o=new s(t),[a]=await o.viewCuisineById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllCuisines=this.viewAllCuisines.bind(this),this.viewCuisineById=this.viewCuisineById.bind(this)}async viewAllCuisines(){const[e]=await this.pool.execute("\n      SELECT cuisine_id, cuisine_name\n      FROM nobsc_cuisines\n    ");return e}async viewCuisineById(e){const[n]=await this.pool.execute("\n      SELECT cuisine_id, cuisine_name\n      FROM nobsc_cuisines\n      WHERE cuisine_id = ?\n    ",[e]);return n}}},function(e,n,i){const{struct:t}=i(2),s=t({cuisineId:"number",cuisineName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(79),o=t();o.get("/",s(r.viewAllMethods)),o.get("/:methodId",s(r.viewMethodById)),e.exports=o},function(e,n,i){const t=i(3),s=i(80),r=i(81),o={viewAllMethods:async function(e,n){const i=new s(t),r=await i.viewAllMethods();n.send(r)},viewMethodById:async function(e,n){const i=Number(e.sanitize(e.params.methodId));r({methodId:i});const o=new s(t),[a]=await o.viewMethodById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllMethods=this.viewAllMethods.bind(this),this.viewMethodById=this.viewMethodById.bind(this)}async viewAllMethods(){const[e]=await this.pool.execute("\n      SELECT method_id, method_name\n      FROM nobsc_methods\n    ");return e}async viewMethodById(e){const[n]=await this.pool.execute("\n      SELECT method_id, method_name\n      FROM nobsc_methods\n      WHERE method_id = ?\n    ",[e]);return n}}},function(e,n,i){const{struct:t}=i(2),s=t({methodId:"number",methodName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(83),o=t();o.get("/",s(r.viewAllMeasurements)),o.get("/:measurementId",s(r.viewMeasurementById)),e.exports=o},function(e,n,i){const t=i(3),s=i(84),r=i(85),o={viewAllMeasurements:async function(e,n){const i=new s(t),r=await i.viewAllMeasurements();n.send(r)},viewMeasurementById:async function(e,n){const i=Number(e.sanitize(e.params.measurementId));r({measurementId:i});const o=new s(t),[a]=await o.viewMeasurementById(i);n.send(a)}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllMeasurements=this.viewAllMeasurements.bind(this),this.viewMeasurementById=this.viewMeasurementById.bind(this)}async viewAllMeasurements(){const[e]=await this.pool.execute("\n      SELECT measurement_id, measurement_name\n      FROM nobsc_measurements\n    ");return e}async viewMeasurementById(e){const[n]=await this.pool.execute("\n      SELECT measurement_id, measurement_name\n      FROM nobsc_measurements\n      WHERE measurement_id = ?\n    ",[e]);return n}}},function(e,n,i){const{struct:t}=i(2),s=t({measurementId:"number",measurementName:"string?"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(87),o=t();o.get("/",s(r.viewMostFavorited)),e.exports=o},function(e,n,i){const t=i(3),s=i(9),r={viewMostFavorited:async function(e,n){const i=e.body.limit,r=new s(t),o=await r.viewMostFavorited(i);n.send(o)}};e.exports=r},function(e,n,i){const{Router:t}=i(0),s=i(89),r=i(95),o=i(97),a=i(99),c=t();c.use("/auth",s),c.use("/equipment",r),c.use("/ingredient",o),c.use("/recipe",a),e.exports=c},function(e,n,i){const{Router:t}=i(0),s=i(10),r=i(1),o=i(90),a=t();a.post("/logout",s,r(o.logout)),a.post("/login",r(o.login)),a.post("/register",r(o.register)),e.exports=a},function(e,n,i){const t=i(19),s=i(3),r=i(91),o=i(92),a=i(93),c=i(94),d={register:async function(e,n){const i=e.sanitize(e.body.staffInfo.email),o=e.sanitize(e.body.staffInfo.password),d=e.sanitize(e.body.staffInfo.staffname);if(a({email:i,pass:o,staffname:d}),d.length<6)return n.send({message:"Staffname must be at least 6 characters."});if(d.length>20)return n.send({message:"Staffname must be no more than 20 characters."});if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(i))return n.send({message:"Invalid email."});if(o.length<6)return n.send({message:"Password must be at least 6 characters."});if(o.length>54)return n.send({message:"Password must be no more than 54 characters."});const u=new r(s);if((await u.getStaffByName(d)).length)return n.send({message:"Staffname already taken."});if((await u.getStaffByEmail(i)).length)return n.send({message:"Email already in use."});const p=await t.hash(o,10),m=c({email:i,pass:p,staffname:d});await u.createStaff(m),n.send({message:"Staff account created."})},login:async function(e,n){const i=e.sanitize(e.body.staffInfo.email),a=e.sanitize(e.body.staffInfo.password);if(o({email:i,pass:a}),!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(i))return n.send({message:"Invalid email."});if(a.length<6)return n.send({message:"Invalid password."});if(a.length>54)return n.send({message:"Invalid password."});const c=new r(s),d=await c.getStaffByEmail(i);if(d&&d[0].email==i){if(await t.compare(a,d[0].pass)){const i=d[0].staff_id,t=d[0].staffname,s=d[0].avatar;return e.session.staffInfo={},e.session.staffInfo.staffId=i,e.session.staffInfo.staffname=t,n.json({message:"Signed in.",staffname:t,avatar:s})}}n.send({message:"Incorrect email or password."})},logout:async function(e,n){await e.session.destroy(),n.end()}};e.exports=d},function(e,n){e.exports=class{constructor(e){this.pool=e,this.getStaffByEmail=this.getStaffByEmail.bind(this),this.getStaffByName=this.getStaffByName.bind(this),this.viewAllStaff=this.viewAllStaff.bind(this),this.viewStaffById=this.viewStaffById.bind(this),this.createStaff=this.createStaff.bind(this)}async getStaffByEmail(e){const[n]=await this.pool.execute("\n      SELECT staff_id, email, pass, staffname\n      FROM nobsc_staff\n      WHERE email = ?\n    ",[e]);return n}async getStaffByName(e){const[n]=await this.pool.execute("\n      SELECT staff_id, email, pass, staffname\n      FROM nobsc_staff\n      WHERE staffname = ?\n    ",[e]);return n}async viewAllStaff(e,n){const[i]=await this.pool.execute("\n      SELECT staffname, avatar\n      FROM nobsc_staff\n      ORDER BY staffname ASC\n      LIMIT ?, ?\n    ",[e,n]);if(!i)throw new Error("viewAllStaff failed");return i}async viewStaffById(e){const[n]=await this.pool.execute("\n      SELECT staffname, avatar\n      FROM nobsc_staff\n      WHERE staff_id = ?\n    ",[e]);if(!n)throw new Error("viewStaffById failed");return n}async createStaff(e){const{email:n,pass:i,staffname:t}=e,[s]=await this.pool.execute("\n      INSERT INTO nobsc_staff (email, pass, staffname)\n      VALUES (?, ?, ?)\n    ",[n,i,t]);if(!s)throw new Error("createdStaff failed");return s}}},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string",staffname:"string"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string",staffname:"string",avatar:"string?",role:"string?"},{avatar:"nobsc-staff-default",role:"staff"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(10),r=i(1),o=i(96),a=t();a.post("/create",s,r(o.createEquipment)),a.put("/update",s,r(o.updateEquipment)),a.delete("/delete",s,r(o.deleteEquipment)),e.exports=a},function(e,n,i){const t=i(3),s=i(12),r=i(20),o={createEquipment:async function(e,n,i){try{const o=Number(e.sanitize(e.body.equipmentInfo.equipmentTypeId)),a=e.sanitize(e.body.equipmentInfo.equipmentName),c=e.sanitize(e.body.equipmentInfo.equipmentDescription),d=e.sanitize(e.body.equipmentInfo.equipmentImage),u=r({equipmentTypeId:o,authorId:1,ownerId:1,equipmentName:a,equipmentDescription:c,equipmentImage:d}),p=new s(t),[m]=await p.createEquipment(u);n.send(m),i()}catch(e){i(e)}},updateEquipment:async function(e,n,i){try{const o=e.sanitize(e.body.equipmentInfo.equipmentId),a=Number(e.sanitize(e.body.equipmentInfo.equipmentTypeId)),c=e.sanitize(e.body.equipmentInfo.equipmentName),d=e.sanitize(e.body.equipmentInfo.equipmentDescription),u=e.sanitize(e.body.equipmentInfo.equipmentImage),p=r({equipmentTypeId:a,authorId:1,ownerId:1,equipmentName:c,equipmentDescription:d,equipmentImage:u}),m=new s(t),[l]=await m.updateEquipment(p,o);n.send(l),i()}catch(e){i(e)}},deleteEquipment:async function(e,n,i){try{const r=e.sanitize(e.body.equipmentId),o=new s(t),[a]=await o.deleteEquipment(r);n.send(a),i()}catch(e){i(e)}}};e.exports=o},function(e,n,i){const{Router:t}=i(0),s=i(10),r=i(1),o=i(98),a=t();a.post("/create",s,r(o.createIngredient)),a.put("/update",s,r(o.updateIngredient)),a.delete("/delete",s,r(o.deleteIngredient)),e.exports=a},function(e,n,i){const t=i(3),s=i(13),r=i(21),o={createIngredient:async function(e,n,i){try{const o=Number(e.sanitize(e.body.ingredientInfo.ingredientTypeId)),a=e.sanitize(e.body.ingredientInfo.ingredientName),c=e.sanitize(e.body.ingredientInfo.ingredientDescription),d=e.sanitize(e.body.ingredientInfo.ingredientImage),u=r({ingredientTypeId:o,authorId:1,ownerId:1,ingredientName:a,ingredientDescription:c,ingredientImage:d}),p=new s(t),[m]=await p.createIngredient(u);n.send(m),i()}catch(e){i(e)}},updateIngredient:async function(e,n,i){try{const o=e.sanitize(e.body.ingredientInfo.ingredientId),a=Number(e.sanitize(e.body.ingredientInfo.ingredientTypeId)),c=e.sanitize(e.body.ingredientInfo.ingredientName),d=e.sanitize(e.body.ingredientInfo.ingredientDescription),u=e.sanitize(e.body.ingredientInfo.ingredientImage),p=r({ingredientTypeId:a,authorId:1,ownerId:1,ingredientName:c,ingredientDescription:d,ingredientImage:u}),m=new s(t),[l]=await m.updateIngredient(p,o);n.send(l),i()}catch(e){i(e)}},deleteIngredient:async function(e,n,i){try{const r=e.sanitize(e.body.ingredientId),o=new s(t),[a]=await o.deleteIngredient(r);n.send(a),i()}catch(e){i(e)}}};e.exports=o},function(e,n,i){const{Router:t}=i(0),s=i(10),r=i(1),o=i(100),a=t();a.post("/create",s,r(o.createRecipe)),a.put("/update",s,r(o.updateRecipe)),a.delete("/delete",s,r(o.deleteRecipe)),e.exports=a},function(e,n,i){const t=i(3),s=i(8),r=i(22),o=i(14),a=i(15),c=i(23),d=i(9),u=i(24),p=i(25),m=i(26),l=i(27),I=i(28),_=i(29),g={createRecipe:async function(e,n,i){try{const d=Number(e.sanitize(e.body.recipeInfo.recipeTypeId)),u=Number(e.sanitize(e.body.recipeInfo.cuisineId)),g=e.sanitize(e.body.recipeInfo.title),y=e.sanitize(e.body.recipeInfo.description),h=e.sanitize(e.body.recipeInfo.directions),f=e.body.recipeInfo.requiredMethods,E=e.body.recipeInfo.requiredEquipment,w=e.body.recipeInfo.requiredIngredients,b=e.body.recipeInfo.requiredSubrecipes,R=e.sanitize(e.body.recipeInfo.recipeImage),v=e.sanitize(e.body.recipeInfo.recipeEquipmentImage),N=e.sanitize(e.body.recipeInfo.recipeIngredientsImage),S=e.sanitize(e.body.recipeInfo.recipeCookingImage),q=p({recipeTypeId:d,cuisineId:u,authorId:1,ownerId:1,title:g,description:y,directions:h,recipeImage:R,equipmentImage:v,ingredientsImage:N,cookingImage:S}),A=new s(t),[O]=await A.createRecipe(q),T=O.insertId;if("none"!==f&&f.length>0&&f.map(e=>m({recipeId:T,methodId:e.methodId}))){let e=[];f.map(n=>{e.push(T,n.methodId)});const n="(?, ?),".repeat(f.length).slice(0,-1),i=new r(t);await i.createRecipeMethods(e,n)}if("none"!==E&&E.length>0&&E.map(e=>l({recipeId:T,equipmentId:e.equipment,amount:e.amount}))){let e=[];E.map(n=>{e.push(T,n.equipment,n.amount)});const n="(?, ?, ?),".repeat(E.length).slice(0,-1);console.log(e),console.log(n);const i=new o(t);await i.createRecipeEquipment(e,n)}if("none"!==w&&w.length>0&&w.map(e=>I({recipeId:T,ingredientId:e.ingredient,amount:e.amount,measurementId:e.unit}))){let e=[];w.map(n=>{e.push(T,n.ingredient,n.amount,n.unit)});const n="(?, ?, ?, ?),".repeat(w.length).slice(0,-1),i=new a(t);await i.createRecipeIngredients(e,n)}if("none"!==b&&b.length>0&&b.map(e=>_({recipeId:T,subrecipeId:e.subrecipe,amount:e.amount,measurementId:e.unit}))){let e=[];b.map(n=>{e.push(T,n.subrecipe,n.amount,n.unit)});const n="(?, ?, ?, ?),".repeat(b.length).slice(0,-1),i=new c(t);await i.createRecipeSubrecipes(e,n)}n.send({message:"Recipe created."}),i()}catch(e){i(e)}},updateRecipe:async function(e,n,i){try{const d=e.sanitize(e.body.recipeInfo.recipeId),u=Number(e.sanitize(e.body.recipeInfo.recipeTypeId)),g=Number(e.sanitize(e.body.recipeInfo.cuisineId)),y=e.sanitize(e.body.recipeInfo.title),h=e.sanitize(e.body.recipeInfo.description),f=e.sanitize(e.body.recipeInfo.directions),E=e.body.recipeInfo.requiredMethods,w=e.body.recipeInfo.requiredEquipment,b=e.body.recipeInfo.requiredIngredients,R=e.body.recipeInfo.requiredSubrecipes,v=e.sanitize(e.body.recipeInfo.recipeImage),N=e.sanitize(e.body.recipeInfo.recipeEquipmentImage),S=e.sanitize(e.body.recipeInfo.recipeIngredientsImage),q=e.sanitize(e.body.recipeInfo.recipeCookingImage),A=p({recipeTypeId:u,cuisineId:g,authorId:1,ownerId:1,title:y,description:h,directions:f,recipeImage:v,equipmentImage:N,ingredientsImage:S,cookingImage:q}),O=new s(t);await O.updateRecipe(A,d);let T="none";"none"!==E&&E.map(e=>m({recipeId:generatedId,methodId:e.methodId}))&&(T=[],E.map(e=>{T.push(generatedId,e.methodId)}));const M="none"!==E?"(?, ?),".repeat(E.length).slice(0,-1):"none",x=new r(t);await x.updateRecipeMethods(T,M,d);let U="none";"none"!==w&&w.map(e=>l({recipeId:generatedId,equipmentId:e.equipment,amount:e.amount}))&&(U=[],w.map(e=>{U.push(generatedId,e.equipment,e.amount)}));const C="none"!==w?"(?, ?, ?),".repeat(w.length).slice(0,-1):"none",P=new o(t);await P.updateRecipeEquipment(U,C,d);let F="none";"none"!==b&&b.map(e=>I({recipeId:generatedId,ingredientId:e.ingredient,amount:e.amount,measurementId:e.unit}))&&(F=[],b.map(e=>{F.push(generatedId,e.ingredient,e.amount,e.unit)}));const B="none"!==b?"(?, ?, ?, ?),".repeat(b.length).slice(0,-1):"none",D=new a(t);await D.updateRecipeIngredients(F,B,d);let z="none";"none"!==R&&R.map(e=>_({recipeId:generatedId,subrecipeId:e.subrecipe,amount:e.amount,measurementId:e.unit}))&&(z=[],R.map(e=>{z.push(generatedId,e.subrecipe,e.amount,e.unit)}));const L="none"!==R?"(?, ?, ?, ?),".repeat(R.length).slice(0,-1):"none",W=new c(t);await W.updateRecipeSubrecipes(z,L,d),n.send("Recipe updated."),i()}catch(e){i(e)}},deleteRecipe:async function(e,n,i){try{const p=e.sanitize(e.body.recipeId),m=new d(t),l=new u(t),I=new r(t),_=new o(t),g=new a(t),y=new c(t),h=new s(t);await m.deleteAllFavoritesOfRecipe(p),await l.deleteAllSavesOfRecipe(p),await I.deleteRecipeMethods(p),await _.deleteRecipeEquipment(p),await g.deleteRecipeIngredients(p),await y.deleteRecipeSubrecipes(p),await y.deleteRecipeSubrecipesBySubrecipeId(p),await h.deleteRecipe(p),n.send("Recipe deleted."),i()}catch(e){i(e)}}};e.exports=g},function(e,n,i){const{Router:t}=i(0),s=i(102),r=i(107),o=i(109),a=i(111),c=i(113),d=i(115),u=i(117),p=i(119),m=i(121),l=i(123),I=i(126),_=i(129),g=i(132),y=i(136),h=i(138),f=i(140),E=t();E.use("/auth",s),E.use("/profile",r),E.use("/get-signed-url/avatar",o),E.use("/get-signed-url/equipment",a),E.use("/get-signed-url/ingredient",c),E.use("/get-signed-url/recipe",d),E.use("/get-signed-url/recipe-equipment",u),E.use("/get-signed-url/recipe-ingredients",p),E.use("/get-signed-url/recipe-cooking",m),E.use("/friendship",l),E.use("/favorite-recipe",I),E.use("/saved-recipe",_),E.use("/plan",g),E.use("/equipment",y),E.use("/ingredient",h),E.use("/recipe",f),e.exports=E},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(103),a=t();a.post("/logout",r(o.logout)),a.post("/login",r(o.login)),a.post("/register",r(o.register)),a.post("/set-avatar",s,r(o.setAvatar)),e.exports=a},function(e,n,i){const t=i(19),s=i(3),r=i(11),o=i(104),a=i(105),c=i(106),d={register:async function(e,n){const i=e.sanitize(e.body.userInfo.email),o=e.sanitize(e.body.userInfo.password),d=e.sanitize(e.body.userInfo.username);if(a({email:i,pass:o,username:d}),d.length<6)return n.send({message:"Username must be at least 6 characters."});if(d.length>20)return n.send({message:"Username must be no more than 20 characters."});if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(i))return n.send({message:"Invalid email."});if(o.length<6)return n.send({message:"Password must be at least 6 characters."});if(o.length>54)return n.send({message:"Password must be no more than 54 characters."});const u=new r(s);if((await u.getUserByName(d)).length)return n.send({message:"Username already taken."});if((await u.getUserByEmail(i)).length)return n.send({message:"Email already in use."});const p=await t.hash(o,10),m=c({email:i,pass:p,username:d});await u.createUser(m),n.send({message:"User account created."})},login:async function(e,n){const i=e.sanitize(e.body.userInfo.email),a=e.sanitize(e.body.userInfo.password);if(o({email:i,pass:a}),!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(i))return n.send({message:"Invalid email."});if(a.length<6)return n.send({message:"Invalid password."});if(a.length>54)return n.send({message:"Invalid password."});const c=new r(s),d=await c.getUserByEmail(i);if(d.length&&d[0].email==i){if(await t.compare(a,d[0].pass)){const i=d[0].user_id,t=d[0].username,s=d[0].avatar;return e.session.userInfo={},e.session.userInfo.userId=i,e.session.userInfo.username=t,e.session.userInfo.avatar=s,n.json({message:"Signed in.",username:t,avatar:s})}}n.send({message:"Incorrect email or password."})},logout:async function(e,n){await e.session.destroy(),n.end()},setAvatar:async function(e,n){const i=e.sanitize(e.body.avatar),t=e.session.userInfo.userId,o=new r(s);await o.setAvatar(i,t),n.send({message:"Avatar set."})}};e.exports=d},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string",username:"string"});e.exports=s},function(e,n,i){const{struct:t}=i(2),s=t({email:"string",pass:"string",username:"string",avatar:"string?"},{avatar:"nobsc-user-default"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(108),o=t();o.get("/:username",s(r.viewProfile)),e.exports=o},function(e,n,i){const t=i(3),s=i(11),r=i(8),o=i(9),a={viewProfile:async function(e,n){const i=e.sanitize(e.params.username),a=new s(t),c=await a.getUserIdByUsername(i),d=c[0].user_id,u=c[0].avatar,p=new r(t),m=await p.viewAllMyPublicUserRecipes(d,1),l=new o(t),I=await l.viewMyFavoriteRecipes(d);n.send({message:"Success.",avatar:u,publicRecipes:m,favoriteRecipes:I})}};e.exports=a},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(110),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(6),s=process.env.AWS_NOBSC_USER_AVATARS_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}`,r=`${i}-tiny`,o=e.sanitize(e.body.fileType),a=new t.S3({accessKeyId:process.env.AWS_NOBSC_USER_AVATARS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_AVATARS_SECRET_ACCESS_KEY}),c=(e,n)=>new Promise((i,t)=>{a.getSignedUrl(e,n,(e,n)=>{e?t(e):i(n)})}),d=await c("putObject",{Bucket:s,Key:i,ContentType:o,Expires:50}),u=await c("putObject",{Bucket:s,Key:r,ContentType:o,Expires:50});n.json({success:!0,signedRequestFullSize:d,signedRequestTinySize:u,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(112),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_EQUIPMENT_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=`${i}-tiny`,a=e.sanitize(e.body.fileType),c=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_EQUIPMENT_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_EQUIPMENT_SECRET_ACCESS_KEY}),d=(e,n)=>new Promise((i,t)=>{c.getSignedUrl(e,n,(e,n)=>{e?t(e):i(n)})}),u=await d("putObject",{Bucket:r,Key:i,ContentType:a,Expires:50}),p=await d("putObject",{Bucket:r,Key:o,ContentType:a,Expires:50});n.json({success:!0,signedRequestFullSize:u,signedRequestTinySize:p,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(114),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_INGREDIENTS_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=`${i}-tiny`,a=e.sanitize(e.body.fileType),c=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_INGREDIENTS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_INGREDIENTS_SECRET_ACCESS_KEY}),d=(e,n)=>new Promise((i,t)=>{c.getSignedUrl(e,n,(e,n)=>{e?t(e):i(n)})}),u=await d("putObject",{Bucket:r,Key:i,ContentType:a,Expires:50}),p=await d("putObject",{Bucket:r,Key:o,ContentType:a,Expires:50});n.json({success:!0,signedRequestFullSize:u,signedRequestTinySize:p,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(116),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_RECIPE_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=`${i}-thumb`,a=`${i}-tiny`,c=e.sanitize(e.body.fileType),d=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_RECIPE_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_RECIPE_SECRET_ACCESS_KEY}),u=(e,n)=>new Promise((i,t)=>{d.getSignedUrl(e,n,(e,n)=>{e?t(e):i(n)})}),p=await u("putObject",{Bucket:r,Key:i,ContentType:c,Expires:50}),m=await u("putObject",{Bucket:r,Key:o,ContentType:c,Expires:50}),l=await u("putObject",{Bucket:r,Key:a,ContentType:c,Expires:50});n.json({success:!0,signedRequestFullSize:p,signedRequestThumbSize:m,signedRequestTinySize:l,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(118),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_RECIPE_EQUIPMENT_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=e.sanitize(e.body.fileType),a=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_RECIPE_EQUIPMENT_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_RECIPE_EQUIPMENT_SECRET_ACCESS_KEY}),c=await(d="putObject",u={Bucket:r,Key:i,ContentType:o,Expires:50},new Promise((e,n)=>{a.getSignedUrl(d,u,(i,t)=>{i?n(i):e(t)})}));var d,u;n.json({success:!0,signedRequestFullSize:c,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(120),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_RECIPE_INGREDIENTS_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=e.sanitize(e.body.fileType),a=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_RECIPE_INGREDIENTS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_RECIPE_INGREDIENTS_SECRET_ACCESS_KEY}),c=await(d="putObject",u={Bucket:r,Key:i,ContentType:o,Expires:50},new Promise((e,n)=>{a.getSignedUrl(d,u,(i,t)=>{i?n(i):e(t)})}));var d,u;n.json({success:!0,signedRequestFullSize:c,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(122),a=t();a.post("/",s,r(o)),e.exports=a},function(e,n,i){i(5).config();const t=i(7),s=i(6),r=process.env.AWS_NOBSC_USER_RECIPE_COOKING_S3_BUCKET;e.exports=async function(e,n){const i=`${e.session.userInfo.username}-${t()}`,o=e.sanitize(e.body.fileType),a=new s.S3({accessKeyId:process.env.AWS_NOBSC_USER_RECIPE_COOKING_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_NOBSC_USER_RECIPE_COOKING_SECRET_ACCESS_KEY}),c=await(d="putObject",u={Bucket:r,Key:i,ContentType:o,Expires:50},new Promise((e,n)=>{a.getSignedUrl(d,u,(i,t)=>{i?n(i):e(t)})}));var d,u;n.json({success:!0,signedRequestFullSize:c,urlFullSize:i})}},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(124),a=t();a.post("/",s,r(o.viewAllMyFriendships)),a.post("/create",s,r(o.createFriendship)),a.put("/accept",s,r(o.acceptFriendship)),a.put("/reject",s,r(o.rejectFriendship)),a.delete("/delete",s,r(o.deleteFriendship)),a.post("/block",s,r(o.blockUser)),a.delete("/unblock",s,r(o.unblockUser)),e.exports=a},function(e,n,i){const t=i(3),s=i(11),r=i(30),o=i(125),a={viewAllMyFriendships:async function(e,n){const i=e.session.userInfo.userId,s=new r(t),o=await s.viewAllMyFriendships(i);n.send(o)},createFriendship:async function(e,n){const i=e.sanitize(e.body.friendName),a=new s(t),c=await a.getUserIdByUsername(i);let d;if(!c.length)return n.send({message:"User not found."});d=c[0].user_id;const u=e.session.userInfo.userId,p=o({userId:u,friendId:d,status1:"pending-sent",status2:"pending-received"}),m=new r(t);if((await m.checkIfBlockedBy(u,d)).length)return n.send({message:"User not found."});const l=await m.getFriendshipByFriendId(u,d);if(l.length){if("pending-sent"===l[0].status)return n.send({message:"Already sent."});if("pending-received"===l[0].status)return n.send({message:"Already received."});if("accepted"===l[0].status)return n.send({message:"Already friends."});if("blocked"===l[0].status)return n.send({message:"User blocked. First unblock."})}await m.createFriendship(p),n.send({message:"Friendship request sent."})},acceptFriendship:async function(e,n){const i=e.sanitize(e.body.friendName),o=new s(t),a=await o.getUserIdByUsername(i);let c;if(!a.length)return n.send({message:"User not found."});c=a[0].user_id;const d=e.session.userInfo.userId,u=new r(t);await u.acceptFriendship(d,c),n.send({message:"Friendship request accepted."})},rejectFriendship:async function(e,n){const i=e.sanitize(e.body.friendName),o=new s(t),a=await o.getUserIdByUsername(i);let c;if(!a.length)return n.send({message:"User not found."});c=a[0].user_id;const d=e.session.userInfo.userId,u=new r(t);await u.rejectFriendship(d,c),n.send({message:"Friendship request rejected."})},deleteFriendship:async function(e,n){const i=e.sanitize(e.body.friendName),o=new s(t),a=await o.getUserIdByUsername(i);let c;if(!a.length)return n.send({message:"User not found."});c=a[0].user_id;const d=e.session.userInfo.userId,u=new r(t);await u.deleteFriendship(d,c),n.send({message:"No longer friends. Maybe again later."})},blockUser:async function(e,n){const i=e.sanitize(e.body.friendName),o=new s(t),a=await o.getUserIdByUsername(i);let c;if(!a.length)return n.send({message:"User not found."});c=a[0].user_id;const d=e.session.userInfo.userId,u=new r(t);await u.blockUser(d,c),n.send({message:"User blocked."})},unblockUser:async function(e,n){const i=e.sanitize(e.body.friendName),o=new s(t),a=await o.getUserIdByUsername(i);let c;if(!a.length)return n.send({message:"User not found."});c=a[0].user_id;const d=e.session.userInfo.userId,u=new r(t);await u.unblockUser(d,c),n.send({message:"User unblocked."})}};e.exports=a},function(e,n,i){const{struct:t}=i(2),s=t({userId:"number",friendId:"number",status1:"string",status2:"string"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(127),a=t();a.post("/",s,r(o.viewMyFavoriteRecipes)),a.post("/create",s,r(o.createMyFavoriteRecipe)),a.delete("/delete",s,r(o.deleteMyFavoriteRecipe)),e.exports=a},function(e,n,i){const t=i(3),s=i(9),r=i(128),o={viewMyFavoriteRecipes:async function(e,n){const i=e.session.userInfo.userId,r=new s(t),o=await r.viewMyFavoriteRecipes(i);n.send(o)},createMyFavoriteRecipe:async function(e,n){const i=e.session.userInfo.userId,o=Number(e.sanitize(e.body.recipeId));r({userId:i,recipeId:o});const a=new s(t);await a.createMyFavoriteRecipe(i,o),n.send({message:"Favorited."})},deleteMyFavoriteRecipe:async function(e,n){const i=e.session.userInfo.userId,o=Number(e.sanitize(e.body.recipeId));r({userId:i,recipeId:o});const a=new s(t);await a.deleteMyFavoriteRecipe(i,o),n.send({message:"Unfavorited."})}};e.exports=o},function(e,n,i){const{struct:t}=i(2),s=t({userId:"number",recipeId:"number"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(130),a=t();a.post("/",s,r(o.viewMySavedRecipes)),a.post("/create",s,r(o.createMySavedRecipe)),a.delete("/delete",s,r(o.deleteMySavedRecipe)),e.exports=a},function(e,n,i){const t=i(3),s=i(24),r=i(131),o={viewMySavedRecipes:async function(e,n){const i=e.session.userInfo.userId,r=new s(t),o=await r.viewMySavedRecipes(i);n.send(o)},createMySavedRecipe:async function(e,n){const i=e.session.userInfo.userId,o=Number(e.sanitize(e.body.recipeId));r({userId:i,recipeId:o});const a=new s(t);await a.createMySavedRecipe(i,o),n.send({message:"Saved."})},deleteMySavedRecipe:async function(e,n){const i=e.session.userInfo.userId,o=Number(e.sanitize(e.body.recipeId));r({userId:i,recipeId:o});const a=new s(t);await a.deleteMySavedRecipe(i,o),n.send({message:"Unsaved."})}};e.exports=o},function(e,n,i){const{struct:t}=i(2),s=t({userId:"number",recipeId:"number"});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(133),a=t();a.post("/all",s,r(o.viewAllMyPrivatePlans)),a.post("/one",s,r(o.viewMyPrivatePlan)),a.post("/create",s,r(o.createMyPrivatePlan)),a.put("/update",s,r(o.updateMyPrivatePlan)),a.delete("/delete",s,r(o.deleteMyPrivatePlan)),e.exports=a},function(e,n,i){const t=i(3),s=i(134),r=i(135),o={viewAllMyPrivatePlans:async function(e,n){const i=e.session.userInfo.userId,r=new s(t),o=await r.viewAllMyPrivatePlans(i);n.send(o)},viewMyPrivatePlan:async function(e,n){const i=Number(e.sanitize(e.body.planId)),r=e.session.userInfo.userId,o=new s(t),[a]=await o.viewMyPrivatePlan(r,i);n.send(a)},createMyPrivatePlan:async function(e,n){const i=e.sanitize(e.body.planInfo.planName),o=e.body.planInfo.planData,a=e.session.userInfo.userId,c=e.session.userInfo.userId,d=r({authorId:a,ownerId:c,planName:i,planData:o}),u=new s(t);await u.createMyPrivatePlan(d),n.send({message:"Plan created."})},updateMyPrivatePlan:async function(e,n){const i=Number(e.sanitize(e.body.planInfo.planId)),o=e.sanitize(e.body.planInfo.planName),a=e.body.planInfo.planData,c=e.session.userInfo.userId,d=e.session.userInfo.userId,u=r({authorId:c,ownerId:d,planName:o,planData:a}),p=new s(t);await p.updateMyPrivatePlan(u,i),n.send({message:"Plan updated."})},deleteMyPrivatePlan:async function(e,n){const i=Number(e.sanitize(e.body.planId)),r=e.session.userInfo.userId,o=new s(t);await o.deleteMyPrivatePlan(r,i),n.send({message:"Plan deleted."})}};e.exports=o},function(e,n){e.exports=class{constructor(e){this.pool=e,this.viewAllMyPrivatePlans=this.viewAllMyPrivatePlans.bind(this),this.viewMyPrivatePlan=this.viewMyPrivatePlan.bind(this),this.createMyPrivatePlan=this.createMyPrivatePlan.bind(this),this.updateMyPrivatePlan=this.updateMyPrivatePlan.bind(this),this.deleteMyPrivatePlan=this.deleteMyPrivatePlan.bind(this)}async viewAllMyPrivatePlans(e){const[n]=await this.pool.execute("\n      SELECT plan_id, plan_name, plan_data\n      FROM nobsc_plans\n      WHERE owner_id = ?\n    ",[e]);return n}async viewMyPrivatePlan(e,n){const[i]=await this.pool.execute("\n      SELECT plan_id, plan_name, plan_data\n      FROM nobsc_plans\n      WHERE owner_id = ? AND plan_id = ?\n    ",[e,n]);return i}async createMyPrivatePlan(e){const{authorId:n,ownerId:i,planName:t,planData:s}=e,[r]=await this.pool.execute("\n      INSERT INTO nobsc_plans (author_id, owner_id, plan_name, plan_data)\n      VALUES (?, ?, ?, ?)\n    ",[n,i,t,s]);return r}async updateMyPrivatePlan(e,n){const{planName:i,planData:t,ownerId:s}=e,[r]=await this.pool.execute("\n      UPDATE nobsc_plans\n      SET plan_name = ?, plan_data = ?\n      WHERE owner_id = ? AND plan_id = ?\n      LIMIT 1\n    ",[i,t,s,n]);return r}async deleteMyPrivatePlan(e,n){const[i]=await this.pool.execute("\n      DELETE\n      FROM nobsc_plans\n      WHERE owner_id = ? AND plan_id = ?\n      LIMIT 1\n    ",[e,n]);return i}}},function(e,n,i){const{struct:t}=i(2),s=t({authorId:"number",ownerId:"number",planName:"string",planData:"string"},{planData:JSON.stringify({1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[],9:[],10:[],11:[],12:[],13:[],14:[],15:[],16:[],17:[],18:[],19:[],20:[],21:[],22:[],23:[],24:[],25:[],26:[],27:[],28:[]})});e.exports=s},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(137),a=t();a.post("/all",s,r(o.viewAllMyPrivateUserEquipment)),a.post("/one",s,r(o.viewMyPrivateUserEquipment)),a.post("/create",s,r(o.createMyPrivateUserEquipment)),a.put("/update",s,r(o.updateMyPrivateUserEquipment)),a.delete("/delete",s,r(o.deleteMyPrivateUserEquipment)),e.exports=a},function(e,n,i){const t=i(3),s=i(14),r=i(12),o=i(20),a={viewAllMyPrivateUserEquipment:async function(e,n){const i=e.session.userInfo.userId,s=new r(t),o=await s.viewAllMyPrivateUserEquipment(i);n.send(o)},viewMyPrivateUserEquipment:async function(e,n){const i=Number(e.sanitize(e.body.equipmentId)),s=e.session.userInfo.userId,o=new r(t),[a]=await o.viewMyPrivateUserEquipment(s,i);n.send(a)},createMyPrivateUserEquipment:async function(e,n){const i=Number(e.sanitize(e.body.equipmentInfo.equipmentTypeId)),s=e.sanitize(e.body.equipmentInfo.equipmentName),a=e.sanitize(e.body.equipmentInfo.equipmentDescription),c=e.sanitize(e.body.equipmentInfo.equipmentImage),d=e.session.userInfo.userId,u=e.session.userInfo.userId,p=o({equipmentTypeId:i,authorId:d,ownerId:u,equipmentName:s,equipmentDescription:a,equipmentImage:c}),m=new r(t);await m.createMyPrivateUserEquipment(p),n.send({message:"Equipment created."})},updateMyPrivateUserEquipment:async function(e,n){const i=Number(e.sanitize(e.body.equipmentInfo.equipmentId)),s=Number(e.sanitize(e.body.equipmentInfo.equipmentTypeId)),a=e.sanitize(e.body.equipmentInfo.equipmentName),c=e.sanitize(e.body.equipmentInfo.equipmentDescription),d=e.sanitize(e.body.equipmentInfo.equipmentImage),u=e.session.userInfo.userId,p=e.session.userInfo.userId,m=o({equipmentTypeId:s,authorId:u,ownerId:p,equipmentName:a,equipmentDescription:c,equipmentImage:d}),l=new r(t);await l.updateMyPrivateUserEquipment(m,i),n.send({message:"Equipment updated."})},deleteMyPrivateUserEquipment:async function(e,n){const i=Number(e.sanitize(e.body.equipmentId)),o=e.session.userInfo.userId,a=new s(t),c=new r(t);await a.deleteRecipeEquipmentByEquipmentId(i),await c.deleteMyPrivateUserEquipment(o,i),n.send({message:"Equipment deleted."})}};e.exports=a},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(139),a=t();a.post("/all",s,r(o.viewAllMyPrivateUserIngredients)),a.post("/one",s,r(o.viewMyPrivateUserIngredient)),a.post("/create",s,r(o.createMyPrivateUserIngredient)),a.put("/update",s,r(o.updateMyPrivateUserIngredient)),a.delete("/delete",s,r(o.deleteMyPrivateUserIngredient)),e.exports=a},function(e,n,i){const t=i(3),s=i(15),r=i(13),o=i(21),a={viewAllMyPrivateUserIngredients:async function(e,n){const i=e.session.userInfo.userId,s=new r(t),o=await s.viewAllMyPrivateUserIngredients(i);n.send(o)},viewMyPrivateUserIngredient:async function(e,n){const i=Number(e.sanitize(e.body.ingredientId)),s=e.session.userInfo.userId,o=new r(t),[a]=await o.viewMyPrivateUserIngredient(s,i);n.send(a)},createMyPrivateUserIngredient:async function(e,n){const i=Number(e.sanitize(e.body.ingredientInfo.ingredientTypeId)),s=e.sanitize(e.body.ingredientInfo.ingredientName),a=e.sanitize(e.body.ingredientInfo.ingredientDescription),c=e.sanitize(e.body.ingredientInfo.ingredientImage),d=e.session.userInfo.userId,u=e.session.userInfo.userId,p=o({ingredientTypeId:i,authorId:d,ownerId:u,ingredientName:s,ingredientDescription:a,ingredientImage:c}),m=new r(t);await m.createMyPrivateUserIngredient(p),n.send({message:"Ingredient created."})},updateMyPrivateUserIngredient:async function(e,n){const i=Number(e.sanitize(e.body.ingredientInfo.ingredientId)),s=Number(e.sanitize(e.body.ingredientInfo.ingredientTypeId)),a=e.sanitize(e.body.ingredientInfo.ingredientName),c=e.sanitize(e.body.ingredientInfo.ingredientDescription),d=e.sanitize(e.body.ingredientInfo.ingredientImage),u=e.session.userInfo.userId,p=e.session.userInfo.userId,m=o({ingredientTypeId:s,authorId:u,ownerId:p,ingredientName:a,ingredientDescription:c,ingredientImage:d}),l=new r(t);await l.updateMyPrivateUserIngredient(m,i),n.send({message:"Ingredient updated."})},deleteMyPrivateUserIngredient:async function(e,n){const i=Number(e.sanitize(e.body.ingredientId)),o=e.session.userInfo.userId,a=new s(t),c=new r(t);await a.deleteRecipeIngredientsByIngredientId(i),await c.deleteMyPrivateUserIngredient(o,i),n.send({message:"Ingredient deleted."})}};e.exports=a},function(e,n,i){const{Router:t}=i(0),s=i(4),r=i(1),o=i(141),a=t();a.post("/create",s,r(o.createRecipe)),a.put("/update",s,r(o.updateMyUserRecipe)),a.delete("/delete/private",s,r(o.deleteMyPrivateUserRecipe)),a.delete("/disown/public",s,r(o.disownMyPublicUserRecipe)),a.post("/private/all",s,r(o.viewAllMyPrivateUserRecipes)),a.post("/public/all",s,r(o.viewAllMyPublicUserRecipes)),a.post("/private/one",s,r(o.viewMyPrivateUserRecipe)),a.post("/public/one",s,r(o.viewMyPublicUserRecipe)),a.post("/edit/private",s,r(o.getInfoToEditMyPrivateUserRecipe)),a.post("/edit/public",s,r(o.getInfoToEditMyPublicUserRecipe)),e.exports=a},function(e,n,i){const t=i(3),s=i(31),r=i(8),o=i(22),a=i(14),c=i(15),d=i(23),u=i(32),p=i(25),m=i(26),l=i(27),I=i(28),_=i(29),g={viewAllMyPrivateUserRecipes:async function(e,n){const i=e.session.userInfo.userId,s=new r(t),o=await s.viewAllMyPrivateUserRecipes(i);n.send(o)},viewAllMyPublicUserRecipes:async function(e,n){const i=e.session.userInfo.userId,s=new r(t),o=await s.viewAllMyPublicUserRecipes(i,1);n.send(o)},viewMyPrivateUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),s=e.session.userInfo.userId,o=new r(t),a=await o.viewMyPrivateUserRecipe(i,s);n.send(a)},viewMyPublicUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),s=e.session.userInfo.userId,o=new r(t),[a]=await o.viewMyPublicUserRecipe(i,s,1);n.send(a)},getInfoToEditMyPrivateUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),s=e.session.userInfo.userId,o=e.session.userInfo.userId,a=new r(t),c=await a.getInfoToEditMyUserRecipe(i,s,o);n.send(c)},getInfoToEditMyPublicUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),s=e.session.userInfo.userId,o=new r(t),a=await o.getInfoToEditMyUserRecipe(i,s,1);n.send(a)},createRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeInfo.recipeTypeId)),g=Number(e.sanitize(e.body.recipeInfo.cuisineId)),y=e.sanitize(e.body.recipeInfo.title),h=e.sanitize(e.body.recipeInfo.description),f=e.sanitize(e.body.recipeInfo.directions),E=e.body.recipeInfo.requiredMethods,w=e.body.recipeInfo.requiredEquipment,b=e.body.recipeInfo.requiredIngredients,R=e.body.recipeInfo.requiredSubrecipes,v=e.sanitize(e.body.recipeInfo.recipeImage),N=e.sanitize(e.body.recipeInfo.recipeEquipmentImage),S=e.sanitize(e.body.recipeInfo.recipeIngredientsImage),q=e.sanitize(e.body.recipeInfo.recipeCookingImage),A=e.session.userInfo.userId,O="private"===e.sanitize(e.body.recipeInfo.ownership)?e.session.userInfo.userId:1,T=p({recipeTypeId:i,cuisineId:g,authorId:A,ownerId:O,title:y,description:h,directions:f,recipeImage:v,equipmentImage:N,ingredientsImage:S,cookingImage:q}),M=new r(t),x=(await M.createRecipe(T)).insertId;if("none"!==E&&E.length>0&&E.map(e=>m({recipeId:x,methodId:e.methodId}))){let e=[];E.map(n=>{e.push(x,n.methodId)});const n="(?, ?),".repeat(E.length).slice(0,-1),i=new o(t);await i.createRecipeMethods(e,n)}if("none"!==w&&w.length>0&&w.map(e=>l({recipeId:x,equipmentId:e.equipment,amount:e.amount}))){let e=[];w.map(n=>{e.push(x,n.equipment,n.amount)});const n="(?, ?, ?),".repeat(w.length).slice(0,-1),i=new a(t);await i.createRecipeEquipment(e,n)}if("none"!==b&&b.length>0&&b.map(e=>I({recipeId:x,ingredientId:e.ingredient,amount:e.amount,measurementId:e.unit}))){let e=[];b.map(n=>{e.push(x,n.ingredient,n.amount,n.unit)});const n="(?, ?, ?, ?),".repeat(b.length).slice(0,-1),i=new c(t);await i.createRecipeIngredients(e,n)}if("none"!==R&&R.length>0&&R.map(e=>_({recipeId:x,subrecipeId:e.subrecipe,amount:e.amount,measurementId:e.unit}))){let e=[];R.map(n=>{e.push(x,n.subrecipe,n.amount,n.unit)});const n="(?, ?, ?, ?),".repeat(R.length).slice(0,-1),i=new d(t);await i.createRecipeSubrecipes(e,n)}if(1===O){const e=await M.getPublicRecipeForElasticSearchInsert(x),n=new u(s);await n.saveRecipe(e)}n.send({message:"Recipe created."})},updateMyUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeInfo.recipeId)),g=Number(e.sanitize(e.body.recipeInfo.recipeTypeId)),y=Number(e.sanitize(e.body.recipeInfo.cuisineId)),h=e.sanitize(e.body.recipeInfo.title),f=e.sanitize(e.body.recipeInfo.description),E=e.sanitize(e.body.recipeInfo.directions),w=e.body.recipeInfo.requiredMethods,b=e.body.recipeInfo.requiredEquipment,R=e.body.recipeInfo.requiredIngredients,v=e.body.recipeInfo.requiredSubrecipes,N=e.sanitize(e.body.recipeInfo.recipeImage),S=e.sanitize(e.body.recipeInfo.recipeEquipmentImage),q=e.sanitize(e.body.recipeInfo.recipeIngredientsImage),A=e.sanitize(e.body.recipeInfo.recipeCookingImage),O=e.session.userInfo.userId,T="private"===e.sanitize(e.body.recipeInfo.ownership)?e.session.userInfo.userId:1;if(""==i||void 0===i)return n.send({message:"Invalid recipe ID!"});const M=p({recipeTypeId:g,cuisineId:y,authorId:O,ownerId:T,title:h,description:f,directions:E,recipeImage:N,equipmentImage:S,ingredientsImage:q,cookingImage:A}),x=new r(t);await x.updateMyUserRecipe(M,i);let U="none";"none"!==w&&w.map(e=>m({recipeId:i,methodId:e.methodId}))&&(U=[],w.map(e=>{U.push(i,e.methodId)}));const C="none"!==w?"(?, ?),".repeat(w.length).slice(0,-1):"none",P=new o(t);await P.updateRecipeMethods(U,C,i);let F="none";"none"!==b&&b.map(e=>l({recipeId:i,equipmentId:e.equipment,amount:e.amount}))&&(F=[],b.map(e=>{F.push(i,e.equipment,e.amount)}));const B="none"!==b?"(?, ?, ?),".repeat(b.length).slice(0,-1):"none",D=new a(t);await D.updateRecipeEquipment(F,B,i);let z="none";"none"!==R&&R.map(e=>I({recipeId:i,ingredientId:e.ingredient,amount:e.amount,measurementId:e.unit}))&&(z=[],R.map(e=>{z.push(i,e.ingredient,e.amount,e.unit)}));const L="none"!==R?"(?, ?, ?, ?),".repeat(R.length).slice(0,-1):"none",W=new c(t);await W.updateRecipeIngredients(z,L,i);let k="none";"none"!==v&&v.map(e=>_({recipeId:i,subrecipeId:e.subrecipe,amount:e.amount,measurementId:e.unit}))&&(k=[],v.map(e=>{k.push(i,e.subrecipe,e.amount,e.unit)}));const H="none"!==v?"(?, ?, ?, ?),".repeat(v.length).slice(0,-1):"none",j=new d(t);if(await j.updateRecipeSubrecipes(k,H,i),1===T){const e=await x.getPublicRecipeForElasticSearchInsert(i),n=new u(s);await n.saveRecipe(e)}n.send({message:"Recipe updated."})},deleteMyPrivateUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),s=e.session.userInfo.userId,u=e.session.userInfo.userId,p=new o(t),m=new a(t),l=new c(t),I=new d(t),_=new r(t);await p.deleteRecipeMethods(i),await m.deleteRecipeEquipment(i),await l.deleteRecipeIngredients(i),await I.deleteRecipeSubrecipes(i),await I.deleteRecipeSubrecipesBySubrecipeId(i),await _.deleteMyPrivateUserRecipe(i,s,u),n.send({message:"Recipe deleted."})},disownMyPublicUserRecipe:async function(e,n){const i=Number(e.sanitize(e.body.recipeId)),o=e.session.userInfo.userId,a=new r(t);await a.disownMyPublicUserRecipe(2,i,o);const c=await a.getPublicRecipeForElasticSearchInsert(generatedId),d=new u(s);await d.saveRecipe(c),n.send({message:"Recipe disowned."})}};e.exports=g},function(e,n){e.exports=require("@elastic/elasticsearch")},function(e,n,i){const{Router:t}=i(0),s=i(1),r=i(144),o=t();o.post("/autocomplete/all",s(r.autocompletePublicAll)),o.post("/find/all",s(r.findPublicAll)),o.post("/autocomplete/recipes",s(r.autocompletePublicRecipes)),o.post("/find/recipes",s(r.findPublicRecipes)),o.post("/autocomplete/ingredients",s(r.autocompletePublicIngredients)),o.post("/find/ingredients",s(r.findPublicIngredients)),o.post("/autocomplete/equipment",s(r.autocompletePublicEquipment)),o.post("/find/equipment",s(r.findPublicEquipment)),e.exports=o},function(e,n,i){const t=i(31),s=i(145),r=i(32),o=i(146),a=i(147),c={autocompletePublicAll:async function(e,n){const i=e.sanitize(e.body.searchTerm),r=new s(t),o=await r.autoAll(i);return n.json({found:o})},findPublicAll:async function(e,n){const i=e.body.body,r=new s(t),o=await r.findAll(i);return n.json({found:o})},autocompletePublicRecipes:async function(e,n){const i=e.sanitize(e.body.searchTerm),s=new r(t),o=await s.autoRecipes(i);return n.json({found:o})},findPublicRecipes:async function(e,n){const i=e.body.body,s=new r(t),o=await s.findRecipes(i);return n.json({found:o})},autocompletePublicIngredients:async function(e,n){const i=e.sanitize(e.body.searchTerm),s=new o(t),r=await s.autoIngredients(i);return n.json({found:r})},findPublicIngredients:async function(e,n){const i=e.body.body,s=new o(t),r=await s.findIngredients(i);return n.json({found:r})},autocompletePublicEquipment:async function(e,n){const i=e.sanitize(e.body.searchTerm),s=new a(t),r=await s.autoEquipment(i);return n.json({found:r})},findPublicEquipment:async function(e,n){const i=e.body.body,s=new a(t),r=await s.findEquipment(i);return n.json({found:r})}};e.exports=c},function(e,n){e.exports=class{constructor(e){this.client=e,this.findAll=this.findAll.bind(this),this.autoAll=this.autoAll.bind(this)}async findAll(e){const{body:n}=await this.client.search({index:"_all",body:e});return n}async autoAll(e){const{body:n}=await this.client.search({index:"_all",body:{highlight:{fragment_size:200,number_of_fragments:1,fields:{title:{}}},query:{bool:{should:[{match:{title:{query:e,operator:"and"}}},{match:{ingredientName:{query:e,operator:"and"}}}]}}},from:0,size:5});return n}}},function(e,n){e.exports=class{constructor(e){this.client=e,this.findIngredients=this.findIngredients.bind(this),this.autoIngredients=this.autoIngredients.bind(this),this.saveIngredient=this.saveIngredient.bind(this),this.deleteIngredient=this.deleteIngredient.bind(this)}async findIngredients(e){const{body:n}=await this.client.search({index:"ingredients",body:e});return n}async autoIngredients(e){const{body:n}=await this.client.search({index:"ingredients",body:{highlight:{fragment_size:200,number_of_fragments:1,fields:{ingredientName:{}}},query:{bool:{must:[{match:{ingredientName:{query:e,operator:"and"}}}]}}},from:0,size:5});return n}async saveIngredient(e){const{ingredientId:n,ingredientTypeName:i,ingredientName:t,ingredientImage:s}=e,r=await this.client.index({index:"ingredients",id:n,body:{ingredientId:n,ingredientTypeName:i,ingredientName:t,ingredientImage:s}});return await this.client.indices.refresh({index:"ingredients"}),r}async deleteIngredient(e){const n=await this.client.delete({index:"ingredients",id:e},{ignore:[404]});return await this.client.indices.refresh({index:"ingredients"}),n}}},function(e,n){e.exports=class{constructor(e){this.client=e,this.findEquipment=this.findEquipment.bind(this),this.autoEquipment=this.autoEquipment.bind(this),this.saveEquipment=this.saveEquipment.bind(this),this.deleteEquipment=this.deleteEquipment.bind(this)}async findEquipment(e){const{body:n}=await this.client.search({index:"equipment",body:e});return n}async autoEquipment(e){const{body:n}=await this.client.search({index:"equipment",body:{highlight:{fragment_size:200,number_of_fragments:1,fields:{equipmentName:{}}},query:{bool:{must:[{match:{equipmentName:{query:e,operator:"and"}}}]}}},from:0,size:5});return n}async saveEquipment(e){const{equipmentId:n,equipmentTypeName:i,equipmentName:t,equipmentImage:s}=e,r=await this.client.index({index:"equipment",id:n,body:{equipmentId:n,equipmentTypeName:i,equipmentName:t,equipmentImage:s}});return await this.client.indices.refresh({index:"equipment"}),r}async deleteEquipment(e){const n=await this.client.delete({index:"equipment",id:e},{ignore:[404]});return await this.client.indices.refresh({index:"equipment"}),n}}},function(e,n,i){"use strict";var t=i(17);function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}const r=i(3),o=i(11),a=i(30),{pubClient:c,subClient:d}=i(16),u=i(150),p=i(151),m=i(33),l=(e,n,i)=>({id:e,user:n,avatar:i});e.exports=async function(e){const n=e.request.userInfo.userId,i=e.request.userInfo.username,I=e.request.userInfo.avatar,_=new o(r),g=new a(r),y=new m(c),h=new p(c,d),f=new u(c);e.on("error",e=>{console.log("ERROR!!!!!"),console.log("error: ",e)}),e.on("GetOnline",(async function(){const t=await g.viewAllMyAcceptedFriendships(n);if(t.length)if(t.length>1){let s=[];for(let r of t){const t=await y.getUserSocketId(r.user_id);t&&(e.broadcast.to(t).emit("ShowOnline",l(n,i,I)),s.push(l(r.user_id,r.username,r.avatar)))}s.length&&e.emit("GetOnline",s)}else{let s=[];const r=await y.getUserSocketId(t[0].user_id);r&&(e.broadcast.to(r).emit("ShowOnline",l(n,i,I)),s.push(l(t[0].user_id,t[0].username,t[0].avatar)),e.emit("GetOnline",s))}})),e.on("GetUser",(async function(n){const i=await h.getUsersInRoom(n);e.emit("GetUser",i)})),e.on("AddChat",(async function(t){const s=Object.keys(e.rooms).filter(n=>n!==e.id),r=((e,n,i)=>({id:i.id+(new Date).getTime().toString(),message:e,room:n,user:i}))(t,s,l(n,i,I));await f.addChat(r),e.broadcast.to(s).emit("AddChat",r),e.emit("AddChat",r)})),e.on("AddWhisper",(async function(t,s){const r=await _.getUserIdByUsername(s);if(r.length){if((await g.viewAllMyBlockedUsers(r[0].user_id)).find(e=>e.user_id===n))e.emit("FailedWhisper","User not found.");else{const o=await y.getUserSocketId(r[0].user_id);if(o){const r=o,a=((e,n,i)=>({id:i.id+(new Date).getTime().toString(),whisper:e,to:n,user:i}))(t,s,l(n,i,I));e.broadcast.to(r).emit("AddWhisper",a),e.emit("AddWhisper",a)}else e.emit("FailedWhisper","User not found.")}}else e.emit("FailedWhisper","User not found.")})),e.on("AddRoom",(async function(t){const s=e.rooms;for(let t in s)s[t]!==e.id&&(e.leave(s[t]),h.removeUserFromRoom(n,s[t]),e.broadcast.to(s[t]).emit("RemoveUser",l(n,i,I)));if(""!==t){e.join(t),await h.addRoom(t),await h.addUserToRoom(n,t),e.broadcast.to(t).emit("AddUser",l(n,i,I));const s=await h.getUsersInRoom(t);e.emit("GetUser",s,t)}})),e.on("disconnecting",(async function(r){const o=function(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}({},e);console.log("DISCONNECTING!!!!!"),console.log("reason: ",r);for(let t in o.rooms)t!==o.id&&(e.broadcast.to(t).emit("RemoveUser",l(n,i,I)),h.removeUserFromRoom(n,t));const a=await g.viewAllMyAcceptedFriendships(n);if(a.length)if(a.length>1)for(let t of a){const s=await y.getUserSocketId(t.user_id);s&&e.broadcast.to(s).emit("ShowOffline",l(n,i,I))}else{const t=await y.getUserSocketId(a[0].user_id);t&&e.broadcast.to(t).emit("ShowOffline",l(n,i,I))}await y.removeUser(n)})),e.on("disconnect",(async function(e){console.log("DISCONNECT!!!!!"),console.log("reason: ",e)}))}},function(e,n){e.exports=require("ioredis")},function(e,n){e.exports=class{constructor(e){this.client=e,this.addChat=this.addChat.bind(this)}async addChat(e){try{await this.client.multi().zadd(`rooms:${e.room}:chats`,Date.now(),JSON.stringify(e)).zadd("rooms",(new Date).getTime(),JSON.stringify(e.room)).exec()}catch(e){console.error(e)}}}},function(e,n){e.exports=class{constructor(e,n){this.pubClient=e,this.subClient=n,this.addRoom=this.addRoom.bind(this),this.getUsersInRoom=this.getUsersInRoom.bind(this),this.addUserToRoom=this.addUserToRoom.bind(this),this.removeUserFromRoom=this.removeUserFromRoom.bind(this)}async addRoom(e){try{""!==e&&await this.pubClient.zadd("rooms",Date.now(),e)}catch(e){console.error(e)}}async getUsersInRoom(e){try{const n=(e,n,i)=>({id:e,user:n,avatar:i});let i=[];const t=await this.pubClient.zrange(`rooms:${e}`,0,-1),s=this.pubClient;for(let e of t){const t=await s.hgetall(`user:${e}`);i.push(n(e,t.name,t.avatar))}return i}catch(e){console.error(e)}}async addUserToRoom(e,n){try{await this.pubClient.multi().zadd(`rooms:${n}`,Date.now(),e).set(`user:${e}:room`,n).exec()}catch(e){console.error(e)}}async removeUserFromRoom(e,n){try{await this.pubClient.multi().zrem(`rooms:${n}`,e).del(`user:${e}:room`).exec()}catch(e){console.error(e)}}}},function(e,n,i){"use strict";const{workerClient:t}=i(16);e.exports=async function(){console.log("Clean Up Isle NOBSC Messenger (START)"),await async function(){try{await t.zrangebyscore("rooms","-inf",(new Date).getTime()-72e5,(function(e,n){null!==e?console.log(e):n.forEach((function(e){t.multi().zrem("rooms",e).del(`rooms:${e}:chats`).exec(),t.zrangebyscore("users","-inf",(new Date).getTime()-72e5,(function(n,i){null!==n?console.log(n):i.forEach((function(n){t.zrem(`rooms:${e}`,n)}))}))}))}))}catch(e){console.log(e)}}(),await async function(){try{await t.zrange("rooms",0,-1,(function(e,n){t.zrangebyscore("rooms","-inf",(new Date).getTime()-72e5,(function(e,n){null!==e?console.log(e):n.forEach((function(e){t.zremrangebyscore(`rooms:${e}:chats`,"-inf",(new Date).getTime()-72e5)}))}))}))}catch(e){console.log(e)}}(),console.log("Clean Up Isle NOBSC Messenger (END)")}}]);