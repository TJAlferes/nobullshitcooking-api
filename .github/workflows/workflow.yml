name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - run: npm install

    #- run: npm run test -- --coverage --watchAll=false
    - run: docker-compose -f docker-compose.test.yml up -d mysql-test
    - run: docker cp ./dbdata/test.sql tests_mysql-test_1:test.sql
    - run: docker exec -it tests_mysql-test_1 bash
    - run: mysql -u root -p pass
    - run: DROP DATABASE nobsc;
    - run: CREATE DATABASE nobsc;
    - run: SOURCE test.sql;
    - run: quit
    - run: exit
    - run: docker-compose -f docker-compose.test.yml up --build --exit-code-from nobsc-api-test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        directory: ./coverage/
        name: codecov-umbrella
        #fail_ci_if_error: true

    timeout-minutes: 5