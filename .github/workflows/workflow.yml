#name: CI/CD
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [18.x]
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Cache dependencies
#        uses: actions/cache@v2
#        with:
#          path: |
#            **/node_modules
#          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
#
#      - name: Install Dependencies
#        run: npm install
#
#      - name: Wait for MySQL to start
#        run: docker-compose -f docker-compose.test.yml exec mysql-test mysqladmin ping -h 127.0.0.1 --wait=30
#        #run: docker-compose -f docker-compose.test.yml up --build -d mysql-test
#
#      - name: Run Tests
#        run: docker-compose -f docker-compose.test.yml up --build --exit-code-from nobsc-test
#
#      - name: Clean up volumes
#        run: docker-compose -f docker-compose.test.yml down -v
#        #- run: docker system prune --all --force --volumes
#
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#        with:
#          directory: ./coverage/
#          name: codecov-umbrella
#          #fail_ci_if_error: true
#
#    timeout-minutes: 10